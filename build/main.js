!function(){"use strict";document.addEventListener("DOMContentLoaded",function(){!function(s){var o,a=[],i=!1,r=!1,d={interval:250,force_process:!1},c=s(window);function l(){r=!1;for(var e=0;e<a.length;e++){var t=s(a[e]).filter(function(){return s(this).is(":appeared")});if(t.trigger("appear",[t]),o){var n=o.not(t);n.trigger("disappear",[n])}o=t}}s.expr[":"].appeared=function(e){var t=s(e);if(!t.is(":visible"))return!1;var n=c.scrollLeft(),o=c.scrollTop(),a=t.offset(),i=a.left,r=a.top;return r+t.height()>=o&&r-(t.data("appear-top-offset")||0)<=o+c.height()&&i+t.width()>=n&&i-(t.data("appear-left-offset")||0)<=n+c.width()},s.fn.extend({appear:function(e){var t=s.extend({},d,e||{}),n=this.selector||this;if(!i){var o=function(){r||(r=!0,setTimeout(l,t.interval))};s(window).scroll(o).resize(o),i=!0}return t.force_process&&setTimeout(l,t.interval),a.push(n),s(n)}}),s.extend({force_appear:function(){return!!i&&(l(),!0)}})}(jQuery),function(f){var g={},n="doTimeout",m=Array.prototype.slice;function o(e){var t,n=this,o={},a=e?f.fn:f,i=arguments,r=4,s=i[1],d=i[2],c=i[3];function l(){e?t.removeData(e):s&&delete g[s]}function u(){o.id=setTimeout(function(){o.fn()},d)}if("string"!=typeof s&&(r--,s=e=0,d=i[1],c=i[2]),e?(t=n.eq(0)).data(e,o=t.data(e)||{}):s&&(o=g[s]||(g[s]={})),o.id&&clearTimeout(o.id),delete o.id,c)o.fn=function(e){"string"==typeof c&&(c=a[c]),!0!==c.apply(n,m.call(i,r))||e?l():u()},u();else{if(o.fn)return void 0===d?l():o.fn(!1===d),!0;l()}}f[n]=function(){return o.apply(window,[0].concat(m.call(arguments)))},f.fn[n]=function(){var e=m.call(arguments),t=o.apply(this,[n+e[0]].concat(e));return"number"==typeof e[0]||"number"==typeof e[1]?this:t}}(jQuery),$(".animatedParent").appear(),$(".animatedClick").click(function(){var e=$(this).attr("data-target");if(null!=$(this).attr("data-sequence")){var t=$("."+e+":first").attr("data-id"),n=$("."+e+":last").attr("data-id"),o=t;$("."+e+"[data-id="+o+"]").hasClass("go")?($("."+e+"[data-id="+o+"]").addClass("goAway"),$("."+e+"[data-id="+o+"]").removeClass("go")):($("."+e+"[data-id="+o+"]").addClass("go"),$("."+e+"[data-id="+o+"]").removeClass("goAway")),o++,delay=Number($(this).attr("data-sequence")),$.doTimeout(delay,function(){if(console.log(n),$("."+e+"[data-id="+o+"]").hasClass("go")?($("."+e+"[data-id="+o+"]").addClass("goAway"),$("."+e+"[data-id="+o+"]").removeClass("go")):($("."+e+"[data-id="+o+"]").addClass("go"),$("."+e+"[data-id="+o+"]").removeClass("goAway")),++o<=n)return!0})}else $("."+e).hasClass("go")?($("."+e).addClass("goAway"),$("."+e).removeClass("go")):($("."+e).addClass("go"),$("."+e).removeClass("goAway"))}),$(document.body).on("appear",".animatedParent",function(e,t){var n=$(this).find(".animated"),o=$(this);if(null!=o.attr("data-sequence")){var a=$(this).find(".animated:first").attr("data-id"),i=$(this).find(".animated:last").attr("data-id");$(o).find(".animated[data-id="+a+"]").addClass("go"),a++,delay=Number(o.attr("data-sequence")),$.doTimeout(delay,function(){if($(o).find(".animated[data-id="+a+"]").addClass("go"),++a<=i)return!0})}else n.addClass("go")}),$(document.body).on("disappear",".animatedParent",function(e,t){$(this).hasClass("animateOnce")||$(this).find(".animated").removeClass("go")}),$(window).on("load",function(){$.force_appear()})}),document.addEventListener("DOMContentLoaded",function(){var o=document.querySelectorAll(".s2-origin-skills"),a=document.querySelector(".scroll-to-about");window.addEventListener("scroll",function e(){var t=document.querySelector(".page_main-nav nav").offsetHeight+100;if(window.scrollY>=a.offsetTop-t&&768<=window.innerWidth)for(var n=0;n<o.length;n++)o[n].classList.add("s2-bouncingAnimation"),window.removeEventListener("scroll",e,!1)},!1)});var o="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};var e,f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r=(function(e){var t,n;t=o,n=function(){var v=function(e){return e&&"getComputedStyle"in window&&"smooth"===window.getComputedStyle(e)["scroll-behavior"]};if("undefined"==typeof window||!("document"in window))return{};var o=function(d,n,c){n=n||999,c||0===c||(c=9);var t,l=function(e){t=e},u=function(){clearTimeout(t),l(0)},f=function(e){return Math.max(0,d.getTopOf(e)-c)},g=function(e,o,a){if(u(),0===o||o&&o<0||v(d.body))d.toY(e),a&&a();else{var i=d.getY(),r=Math.max(0,e)-i,s=(new Date).getTime();o=o||Math.min(Math.abs(r),n),function n(){l(setTimeout(function(){var e=Math.min(1,((new Date).getTime()-s)/o),t=Math.max(0,Math.floor(i+r*(e<.5?2*e*e:e*(4-2*e)-1)));d.toY(t),e<1&&d.getHeight()+t<d.body.scrollHeight?n():(setTimeout(u,99),a&&a())},9))}()}},m=function(e,t,n){g(f(e),t,n)};return{setup:function(e,t){return(0===e||e)&&(n=e),(0===t||t)&&(c=t),{defaultDuration:n,edgeOffset:c}},to:m,toY:g,intoView:function(e,t,n){var o=e.getBoundingClientRect().height,a=d.getTopOf(e)+o,i=d.getHeight(),r=d.getY(),s=r+i;f(e)<r||i<o+c?m(e,t,n):s<a+c?g(a-i+c,t,n):n&&n()},center:function(e,t,n,o){g(Math.max(0,d.getTopOf(e)-d.getHeight()/2+(n||e.getBoundingClientRect().height/2)),t,o)},stop:u,moving:function(){return!!t},getY:d.getY,getTopOf:d.getTopOf}},a=document.documentElement,t=function(){return window.scrollY||a.scrollTop},d=o({body:document.scrollingElement||document.body,toY:function(e){window.scrollTo(0,e)},getY:t,getHeight:function(){return window.innerHeight||a.clientHeight},getTopOf:function(e){return e.getBoundingClientRect().top+t()-a.offsetTop}});if(d.createScroller=function(t,e,n){return o({body:t,toY:function(e){t.scrollTop=e},getY:function(){return t.scrollTop},getHeight:function(){return Math.min(t.clientHeight,window.innerHeight||a.clientHeight)},getTopOf:function(e){return e.offsetTop}},e,n)},"addEventListener"in window&&!window.noZensmooth&&!v(document.body)){var c="history"in window&&"pushState"in history,l=c&&"scrollRestoration"in history;l&&(history.scrollRestoration="auto"),window.addEventListener("load",function(){l&&(setTimeout(function(){history.scrollRestoration="manual"},9),window.addEventListener("popstate",function(e){e.state&&"zenscrollY"in e.state&&d.toY(e.state.zenscrollY)},!1)),window.location.hash&&setTimeout(function(){var e=d.setup().edgeOffset;if(e){var t=document.getElementById(window.location.href.split("#")[1]);if(t){var n=Math.max(0,d.getTopOf(t)-e),o=d.getY()-n;0<=o&&o<9&&window.scrollTo(0,n)}}},9)},!1);var u=new RegExp("(^|\\s)noZensmooth(\\s|$)");window.addEventListener("click",function(e){for(var t=e.target;t&&"A"!==t.tagName;)t=t.parentNode;if(!(!t||1!==e.which||e.shiftKey||e.metaKey||e.ctrlKey||e.altKey)){if(l){var n=history.state&&"object"==f(history.state)?history.state:{};n.zenscrollY=d.getY();try{history.replaceState(n,"")}catch(e){}}var o=t.getAttribute("href")||"";if(0===o.indexOf("#")&&!u.test(t.className)){var a=0,i=document.getElementById(o.substring(1));if("#"!==o){if(!i)return;a=d.getTopOf(i)}e.preventDefault();var r=function(){window.location=o},s=d.setup().edgeOffset;s&&(a=Math.max(0,a-s),c&&(r=function(){history.pushState({},"",o)})),d.toY(a,null,r)}}},!1)}return d},e.exports?e.exports=n():function e(){document&&document.body?t.zenscroll=n():setTimeout(e,9)}()}(e={exports:{}},e.exports),e.exports),s={setSizeXY:function(e,t){var n=e.offsetWidth/e.offsetHeight;t.style.boxSizing="border-box",t.style.padding=0,t.style.margin=0;var o=t.offsetWidth,a=t.offsetHeight,i=o/a;n<i?(e.style.height=a+"px",e.style.width="auto"):i<n?(e.style.width=o+"px",e.style.height="auto"):i===n&&(e.style.height=a+"px",e.style.width="auto")},aToB:function(e,t){this.setSizeXY(e,t)},listen:function(e,t){this.setSizeXY(e,t),window.addEventListener("resize",function(){s.setSizeXY(e,t)})},cover:function(e,t){this.setSizeXY(e,t),this.listen(e,t)}};function d(e){var o=[];return e.forEach(function(e){var t=window.getComputedStyle(e.querySelector(".sn4_gallery-image")).getPropertyValue("background-image"),n=t.indexOf(".jpg")-1;o.push(t.charAt(n))}),o}document.addEventListener("DOMContentLoaded",function(){o=g(document.querySelectorAll(".sn4_nav_dot-btn")),a=document.querySelector(".sn4_gallery-wrapper"),o.forEach(function(t,n){t.addEventListener("click",function(){var e;o.forEach(function(e){return e.classList.remove("sn4_clicked")}),t.classList.add("sn4_clicked"),a.style.left=100*n*-1+"%",(e=a).parentNode.offsetWidth<=620&&r.to(e.parentNode)})}),u=document.querySelector(".sn4_nav"),f=window.pageYOffset,window.addEventListener("scroll",function(){if(u.parentNode.offsetWidth<=620){var e=window.pageYOffset;f<e==1?(r=e,s=document.querySelector(".sn4_gallery-wrapper"),d=s.offsetTop,c=d+s.offsetHeight,l=window.innerHeight/3*3,d<r&&r+l<c?document.querySelector(".sn4_nav").classList.add("sn4_nav_fixed"):document.querySelector(".sn4_nav").classList.remove("sn4_nav_fixed")):e<f==1&&(t=e,n=document.querySelector(".sn4_gallery-wrapper"),o=n.offsetTop,a=o+n.offsetHeight,i=window.innerHeight/3,t<o?document.querySelector(".sn4_nav").classList.remove("sn4_nav_fixed"):t<a-3*i&&o<t&&document.querySelector(".sn4_nav").classList.add("sn4_nav_fixed")),f=e}var t,n,o,a,i,r,s,d,c,l}),e=g(document.querySelectorAll(".sn4_container_gallery_img-positioner")),n=d(e),e.forEach(function(e,t){e.addEventListener("click",function(){!function(e,t){var n=e[t],o=document.createElement("div");o.classList.add("sn4_bigBG");var a=document.createElement("div");a.classList.add("sn4_bigBG_positioner");var i=document.createElement("img");i.setAttribute("src","./build/gallery/photo-"+n+".jpg"),o.appendChild(a),a.appendChild(i),document.body.appendChild(o),s.cover(i,a),function(e,t,a){c=t;var n=document.createElement("nav");n.classList.add("sn4_bigBG_nav"),e.appendChild(n);var i=document.createElement("div");i.classList.add("sn4_bigBG_nav_positioner"),n.appendChild(i);var o=[void 0,void 0,void 0],r=['<i class="fas fa-arrow-left"></i>','<i class="fas fa-times"></i>','<i class="fas fa-arrow-right"></i >'];o.forEach(function(e,t){(e=document.createElement("div")).classList.add("sn4_bigBG_nav_positioned-btn"),i.appendChild(e),e.innerHTML=r[t];var n=g(document.querySelectorAll(".sn4_container_gallery_img-positioner")),o=d(n);0===t?l(e,a,o,-1):1===t?e.addEventListener("click",function(){document.querySelector(".sn4_bigBG").classList.add("sn4_fade-out"),setTimeout(function(){document.body.removeChild(document.querySelector(".sn4_bigBG"))},300)}):2===t&&l(e,a,o,1)})}(o,t,i)}(n,t)})});var e,n;var u,f;var o,a});var c=void 0;function l(e,t,n,o){e.addEventListener("click",function(){(c+=o)===n.length?c=0:c<0&&(c=n.length-1),t.classList.remove("sn4_fade-out-in"),setTimeout(function(){t.classList.add("sn4_fade-out-in")},0),setTimeout(function(){t.setAttribute("src","./build/gallery/photo-"+n[c]+".jpg")},0)})}function g(e){for(var t=e.length,n=[],o=0;o<t;o++)n.push(e[o]);return n}function u(e){for(var t=e.length,n=[],o=0;o<t;o++)n.push(e[o]);return n}document.addEventListener("DOMContentLoaded",function(){i=document.querySelector(".page_main-nav nav").offsetHeight,document.querySelector(".page_main-nav").style.height=i+5+"px",window.addEventListener("resize",function(){var e=document.querySelector(".page_main-nav nav").offsetHeight;document.querySelector(".page_main-nav").style.height=e+5+"px"}),n=document.querySelector(".page_main-nav nav"),a=document.querySelector("div.page_main-nav"),window.addEventListener("scroll",function(){window.pageYOffset>a.offsetHeight?(setTimeout(function(){n.classList.add("page_main-nav_nav-sticky")},0),n.classList.add("page_main-nav_pretend-to-be-sticky")):(n.classList.remove("page_main-nav_nav-sticky"),n.classList.remove("page_main-nav_pretend-to-be-sticky"))}),e=u(document.querySelectorAll(".page_main-nav nav ul li")),o=[".scroll-to-start",".scroll-to-about",".scroll-to-offer",".scroll-to-gallery",".scroll-to-contact"],e.forEach(function(e,n){e.addEventListener("click",function(){var e=document.querySelector(".page_main-nav nav").offsetHeight,t=document.querySelector(o[n]).offsetTop;r.toY(t-e)})}),t=window.pageYOffset,window.addEventListener("scroll",function(){var o,a,i,r,e=window.pageYOffset;t<e==1?(i=u(document.querySelectorAll(".page_main-nav nav ul li")),r=document.querySelector(".page_main-nav nav").offsetHeight,[".scroll-to-start",".scroll-to-about",".scroll-to-offer",".scroll-to-gallery",".scroll-to-contact"].forEach(function(e,t){var n=document.querySelector(e);window.pageYOffset>=n.offsetTop-r-1&&window.pageYOffset<n.offsetTop+n.offsetHeight-r?i[t].classList.add("setonscroll"):i[t].classList.remove("setonscroll")})):e<t==1&&(o=u(document.querySelectorAll(".page_main-nav nav ul li")),a=document.querySelector(".page_main-nav nav").offsetHeight,[".scroll-to-start",".scroll-to-about",".scroll-to-offer",".scroll-to-gallery",".scroll-to-contact"].forEach(function(e,t){var n=document.querySelector(e);window.pageYOffset<n.offsetTop+n.offsetHeight-a-300&&window.pageYOffset>n.offsetTop-a-299?o[t].classList.add("setonscroll"):o[t].classList.remove("setonscroll")})),t=e});var t;var e,o;var n,a;var i}),document.addEventListener("DOMContentLoaded",function(){document.querySelector(".s1_bar_button-to-go").addEventListener("click",function(){var e=document.querySelector(".scroll-to-about").offsetTop-document.querySelector("nav").offsetHeight;r.toY(e)})})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsiLi4vc3JjL3NjcmlwdHMvY3NzMy1hbmltYXRlLWl0LmpzIiwiLi4vc3JjL3NjcmlwdHMvczJhbmltYXRpb24uanMiLCIuLi9zcmMvc2NyaXB0cy96ZW5zY3JvbGwtbWluLmpzIiwiLi4vc3JjL3NjcmlwdHMvZml0c2l6aW5nLmpzIiwiLi4vc3JjL3NjcmlwdHMvc240LXNjcmlwdC5qcyIsIi4uL3NyYy9zY3JpcHRzL25hdmlnYXRpb24uanMiLCIuLi9zcmMvc2NyaXB0cy9kb2RhdGtpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIENTUzMgQW5pbWF0ZSBpdFxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQgSmFjayBNY0NvdXJ0XHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9rcmllZ2FyL2NzczMtYW5pbWF0ZS1pdFxyXG4gKiBWZXJzaW9uOiAwLjEuMFxyXG4gKiBcclxuICogSSB1dGlsaXNlIHRoZSBqUXVlcnkuYXBwZWFyIHBsdWdpbiB3aXRoaW4gdGhpcyBqYXZhc2NyaXB0IGZpbGUgc28gaGVyZSBpcyBhIGxpbmsgdG8gdGhhdCB0b29cclxuICogaHR0cHM6Ly9naXRodWIuY29tL21vcnIvanF1ZXJ5LmFwcGVhclxyXG4gKlxyXG4gKiBJIGFsc28gdXRpbGlzZSB0aGUgalF1ZXJ5LmRvVGltZW91dCBwbHVnaW4gZm9yIHRoZSBkYXRhLXNlcXVlbmNlIGZ1bmN0aW9uYWxpdHkgc28gaGVyZSBpcyBhIGxpbmsgYmFjayB0byB0aGVtLlxyXG4gKiBodHRwOi8vYmVuYWxtYW4uY29tL3Byb2plY3RzL2pxdWVyeS1kb3RpbWVvdXQtcGx1Z2luL1xyXG4gKi9cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCl7XHJcbihmdW5jdGlvbigkKSB7XHJcbiAgdmFyIHNlbGVjdG9ycyA9IFtdO1xyXG5cclxuICB2YXIgY2hlY2tfYmluZGVkID0gZmFsc2U7XHJcbiAgdmFyIGNoZWNrX2xvY2sgPSBmYWxzZTtcclxuICB2YXIgZGVmYXVsdHMgPSB7XHJcbiAgICBpbnRlcnZhbDogMjUwLFxyXG4gICAgZm9yY2VfcHJvY2VzczogZmFsc2VcclxuICB9XHJcbiAgdmFyICR3aW5kb3cgPSAkKHdpbmRvdyk7XHJcblxyXG4gIHZhciAkcHJpb3JfYXBwZWFyZWQ7XHJcblxyXG4gIGZ1bmN0aW9uIHByb2Nlc3MoKSB7XHJcbiAgICBjaGVja19sb2NrID0gZmFsc2U7XHJcbiAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgc2VsZWN0b3JzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICB2YXIgJGFwcGVhcmVkID0gJChzZWxlY3RvcnNbaW5kZXhdKS5maWx0ZXIoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuICQodGhpcykuaXMoJzphcHBlYXJlZCcpO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICAgICRhcHBlYXJlZC50cmlnZ2VyKCdhcHBlYXInLCBbJGFwcGVhcmVkXSk7XHJcblxyXG4gICAgICBpZiAoJHByaW9yX2FwcGVhcmVkKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdmFyICRkaXNhcHBlYXJlZCA9ICRwcmlvcl9hcHBlYXJlZC5ub3QoJGFwcGVhcmVkKTtcclxuICAgICAgICAkZGlzYXBwZWFyZWQudHJpZ2dlcignZGlzYXBwZWFyJywgWyRkaXNhcHBlYXJlZF0pO1xyXG4gICAgICB9XHJcbiAgICAgICRwcmlvcl9hcHBlYXJlZCA9ICRhcHBlYXJlZDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFwiYXBwZWFyZWRcIiBjdXN0b20gZmlsdGVyXHJcbiAgJC5leHByWyc6J11bJ2FwcGVhcmVkJ10gPSBmdW5jdGlvbihlbGVtZW50KSB7XHJcbiAgICB2YXIgJGVsZW1lbnQgPSAkKGVsZW1lbnQpO1xyXG4gICAgaWYgKCEkZWxlbWVudC5pcygnOnZpc2libGUnKSkge1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHdpbmRvd19sZWZ0ID0gJHdpbmRvdy5zY3JvbGxMZWZ0KCk7XHJcbiAgICB2YXIgd2luZG93X3RvcCA9ICR3aW5kb3cuc2Nyb2xsVG9wKCk7XHJcbiAgICB2YXIgb2Zmc2V0ID0gJGVsZW1lbnQub2Zmc2V0KCk7XHJcbiAgICB2YXIgbGVmdCA9IG9mZnNldC5sZWZ0O1xyXG4gICAgdmFyIHRvcCA9IG9mZnNldC50b3A7XHJcblxyXG4gICAgaWYgKHRvcCArICRlbGVtZW50LmhlaWdodCgpID49IHdpbmRvd190b3AgJiZcclxuICAgICAgICB0b3AgLSAoJGVsZW1lbnQuZGF0YSgnYXBwZWFyLXRvcC1vZmZzZXQnKSB8fCAwKSA8PSB3aW5kb3dfdG9wICsgJHdpbmRvdy5oZWlnaHQoKSAmJlxyXG4gICAgICAgIGxlZnQgKyAkZWxlbWVudC53aWR0aCgpID49IHdpbmRvd19sZWZ0ICYmXHJcbiAgICAgICAgbGVmdCAtICgkZWxlbWVudC5kYXRhKCdhcHBlYXItbGVmdC1vZmZzZXQnKSB8fCAwKSA8PSB3aW5kb3dfbGVmdCArICR3aW5kb3cud2lkdGgoKSkge1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICQuZm4uZXh0ZW5kKHtcclxuICAgIC8vIHdhdGNoaW5nIGZvciBlbGVtZW50J3MgYXBwZWFyYW5jZSBpbiBicm93c2VyIHZpZXdwb3J0XHJcbiAgICBhcHBlYXI6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcclxuICAgICAgdmFyIG9wdHMgPSAkLmV4dGVuZCh7fSwgZGVmYXVsdHMsIG9wdGlvbnMgfHwge30pO1xyXG4gICAgICB2YXIgc2VsZWN0b3IgPSB0aGlzLnNlbGVjdG9yIHx8IHRoaXM7XHJcbiAgICAgIGlmICghY2hlY2tfYmluZGVkKSB7XHJcbiAgICAgICAgdmFyIG9uX2NoZWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICBpZiAoY2hlY2tfbG9jaykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBjaGVja19sb2NrID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgICBzZXRUaW1lb3V0KHByb2Nlc3MsIG9wdHMuaW50ZXJ2YWwpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgICQod2luZG93KS5zY3JvbGwob25fY2hlY2spLnJlc2l6ZShvbl9jaGVjayk7XHJcbiAgICAgICAgY2hlY2tfYmluZGVkID0gdHJ1ZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKG9wdHMuZm9yY2VfcHJvY2Vzcykge1xyXG4gICAgICAgIHNldFRpbWVvdXQocHJvY2Vzcywgb3B0cy5pbnRlcnZhbCk7XHJcbiAgICAgIH1cclxuICAgICAgc2VsZWN0b3JzLnB1c2goc2VsZWN0b3IpO1xyXG4gICAgICByZXR1cm4gJChzZWxlY3Rvcik7XHJcbiAgICB9XHJcbiAgfSk7XHJcblxyXG4gICQuZXh0ZW5kKHtcclxuICAgIC8vIGZvcmNlIGVsZW1lbnRzJ3MgYXBwZWFyYW5jZSBjaGVja1xyXG4gICAgZm9yY2VfYXBwZWFyOiBmdW5jdGlvbigpIHtcclxuICAgICAgaWYgKGNoZWNrX2JpbmRlZCkge1xyXG4gICAgICAgIHByb2Nlc3MoKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgfTtcclxuICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59KShqUXVlcnkpO1xyXG5cclxuXHJcblxyXG4vKiFcclxuICogalF1ZXJ5IGRvVGltZW91dDogTGlrZSBzZXRUaW1lb3V0LCBidXQgYmV0dGVyISAtIHYxLjAgLSAzLzMvMjAxMFxyXG4gKiBodHRwOi8vYmVuYWxtYW4uY29tL3Byb2plY3RzL2pxdWVyeS1kb3RpbWVvdXQtcGx1Z2luL1xyXG4gKiBcclxuICogQ29weXJpZ2h0IChjKSAyMDEwIFwiQ293Ym95XCIgQmVuIEFsbWFuXHJcbiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLlxyXG4gKiBodHRwOi8vYmVuYWxtYW4uY29tL2Fib3V0L2xpY2Vuc2UvXHJcbiAqL1xyXG5cclxuLy8gU2NyaXB0OiBqUXVlcnkgZG9UaW1lb3V0OiBMaWtlIHNldFRpbWVvdXQsIGJ1dCBiZXR0ZXIhXHJcbi8vXHJcbi8vICpWZXJzaW9uOiAxLjAsIExhc3QgdXBkYXRlZDogMy8zLzIwMTAqXHJcbi8vIFxyXG4vLyBQcm9qZWN0IEhvbWUgLSBodHRwOi8vYmVuYWxtYW4uY29tL3Byb2plY3RzL2pxdWVyeS1kb3RpbWVvdXQtcGx1Z2luL1xyXG4vLyBHaXRIdWIgICAgICAgLSBodHRwOi8vZ2l0aHViLmNvbS9jb3dib3kvanF1ZXJ5LWRvdGltZW91dC9cclxuLy8gU291cmNlICAgICAgIC0gaHR0cDovL2dpdGh1Yi5jb20vY293Ym95L2pxdWVyeS1kb3RpbWVvdXQvcmF3L21hc3Rlci9qcXVlcnkuYmEtZG90aW1lb3V0LmpzXHJcbi8vIChNaW5pZmllZCkgICAtIGh0dHA6Ly9naXRodWIuY29tL2Nvd2JveS9qcXVlcnktZG90aW1lb3V0L3Jhdy9tYXN0ZXIvanF1ZXJ5LmJhLWRvdGltZW91dC5taW4uanMgKDEuMGtiKVxyXG4vLyBcclxuLy8gQWJvdXQ6IExpY2Vuc2VcclxuLy8gXHJcbi8vIENvcHlyaWdodCAoYykgMjAxMCBcIkNvd2JveVwiIEJlbiBBbG1hbixcclxuLy8gRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGFuZCBHUEwgbGljZW5zZXMuXHJcbi8vIGh0dHA6Ly9iZW5hbG1hbi5jb20vYWJvdXQvbGljZW5zZS9cclxuLy8gXHJcbi8vIEFib3V0OiBFeGFtcGxlc1xyXG4vLyBcclxuLy8gVGhlc2Ugd29ya2luZyBleGFtcGxlcywgY29tcGxldGUgd2l0aCBmdWxseSBjb21tZW50ZWQgY29kZSwgaWxsdXN0cmF0ZSBhIGZld1xyXG4vLyB3YXlzIGluIHdoaWNoIHRoaXMgcGx1Z2luIGNhbiBiZSB1c2VkLlxyXG4vLyBcclxuLy8gRGVib3VuY2luZyAgICAgIC0gaHR0cDovL2JlbmFsbWFuLmNvbS9jb2RlL3Byb2plY3RzL2pxdWVyeS1kb3RpbWVvdXQvZXhhbXBsZXMvZGVib3VuY2luZy9cclxuLy8gRGVsYXlzLCBQb2xsaW5nIC0gaHR0cDovL2JlbmFsbWFuLmNvbS9jb2RlL3Byb2plY3RzL2pxdWVyeS1kb3RpbWVvdXQvZXhhbXBsZXMvZGVsYXktcG9sbC9cclxuLy8gSG92ZXIgSW50ZW50ICAgIC0gaHR0cDovL2JlbmFsbWFuLmNvbS9jb2RlL3Byb2plY3RzL2pxdWVyeS1kb3RpbWVvdXQvZXhhbXBsZXMvaG92ZXJpbnRlbnQvXHJcbi8vIFxyXG4vLyBBYm91dDogU3VwcG9ydCBhbmQgVGVzdGluZ1xyXG4vLyBcclxuLy8gSW5mb3JtYXRpb24gYWJvdXQgd2hhdCB2ZXJzaW9uIG9yIHZlcnNpb25zIG9mIGpRdWVyeSB0aGlzIHBsdWdpbiBoYXMgYmVlblxyXG4vLyB0ZXN0ZWQgd2l0aCwgd2hhdCBicm93c2VycyBpdCBoYXMgYmVlbiB0ZXN0ZWQgaW4sIGFuZCB3aGVyZSB0aGUgdW5pdCB0ZXN0c1xyXG4vLyByZXNpZGUgKHNvIHlvdSBjYW4gdGVzdCBpdCB5b3Vyc2VsZikuXHJcbi8vIFxyXG4vLyBqUXVlcnkgVmVyc2lvbnMgLSAxLjMuMiwgMS40LjJcclxuLy8gQnJvd3NlcnMgVGVzdGVkIC0gSW50ZXJuZXQgRXhwbG9yZXIgNi04LCBGaXJlZm94IDItMy42LCBTYWZhcmkgMy00LCBDaHJvbWUgNC01LCBPcGVyYSA5LjYtMTAuMS5cclxuLy8gVW5pdCBUZXN0cyAgICAgIC0gaHR0cDovL2JlbmFsbWFuLmNvbS9jb2RlL3Byb2plY3RzL2pxdWVyeS1kb3RpbWVvdXQvdW5pdC9cclxuLy8gXHJcbi8vIEFib3V0OiBSZWxlYXNlIEhpc3RvcnlcclxuLy8gXHJcbi8vIDEuMCAtICgzLzMvMjAxMCkgQ2FsbGJhY2sgY2FuIG5vdyBiZSBhIHN0cmluZywgaW4gd2hpY2ggY2FzZSBpdCB3aWxsIGNhbGxcclxuLy8gICAgICAgdGhlIGFwcHJvcHJpYXRlICQubWV0aG9kIG9yICQuZm4ubWV0aG9kLCBkZXBlbmRpbmcgb24gd2hlcmUgLmRvVGltZW91dFxyXG4vLyAgICAgICB3YXMgY2FsbGVkLiBDYWxsYmFjayBtdXN0IG5vdyByZXR1cm4gYHRydWVgIChub3QganVzdCBhIHRydXRoeSB2YWx1ZSlcclxuLy8gICAgICAgdG8gcG9sbC5cclxuLy8gMC40IC0gKDcvMTUvMjAwOSkgTWFkZSB0aGUgXCJpZFwiIGFyZ3VtZW50IG9wdGlvbmFsLCBzb21lIG90aGVyIG1pbm9yIHR3ZWFrc1xyXG4vLyAwLjMgLSAoNi8yNS8yMDA5KSBJbml0aWFsIHJlbGVhc2VcclxuXHJcbihmdW5jdGlvbigkKXtcclxuICAnJDpub211bmdlJzsgLy8gVXNlZCBieSBZVUkgY29tcHJlc3Nvci5cclxuICBcclxuICB2YXIgY2FjaGUgPSB7fSxcclxuICAgIFxyXG4gICAgLy8gUmV1c2VkIGludGVybmFsIHN0cmluZy5cclxuICAgIGRvVGltZW91dCA9ICdkb1RpbWVvdXQnLFxyXG4gICAgXHJcbiAgICAvLyBBIGNvbnZlbmllbnQgc2hvcnRjdXQuXHJcbiAgICBhcHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XHJcbiAgXHJcbiAgLy8gTWV0aG9kOiBqUXVlcnkuZG9UaW1lb3V0XHJcbiAgLy8gXHJcbiAgLy8gSW5pdGlhbGl6ZSwgY2FuY2VsLCBvciBmb3JjZSBleGVjdXRpb24gb2YgYSBjYWxsYmFjayBhZnRlciBhIGRlbGF5LlxyXG4gIC8vIFxyXG4gIC8vIElmIGRlbGF5IGFuZCBjYWxsYmFjayBhcmUgc3BlY2lmaWVkLCBhIGRvVGltZW91dCBpcyBpbml0aWFsaXplZC4gVGhlXHJcbiAgLy8gY2FsbGJhY2sgd2lsbCBleGVjdXRlLCBhc3luY2hyb25vdXNseSwgYWZ0ZXIgdGhlIGRlbGF5LiBJZiBhbiBpZCBpc1xyXG4gIC8vIHNwZWNpZmllZCwgdGhpcyBkb1RpbWVvdXQgd2lsbCBvdmVycmlkZSBhbmQgY2FuY2VsIGFueSBleGlzdGluZyBkb1RpbWVvdXRcclxuICAvLyB3aXRoIHRoZSBzYW1lIGlkLiBBbnkgYWRkaXRpb25hbCBhcmd1bWVudHMgd2lsbCBiZSBwYXNzZWQgaW50byBjYWxsYmFja1xyXG4gIC8vIHdoZW4gaXQgaXMgZXhlY3V0ZWQuXHJcbiAgLy8gXHJcbiAgLy8gSWYgdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZSwgdGhlIGRvVGltZW91dCBsb29wIHdpbGwgZXhlY3V0ZSBhZ2FpbiwgYWZ0ZXJcclxuICAvLyB0aGUgZGVsYXksIGNyZWF0aW5nIGEgcG9sbGluZyBsb29wIHVudGlsIHRoZSBjYWxsYmFjayByZXR1cm5zIGEgbm9uLXRydWVcclxuICAvLyB2YWx1ZS5cclxuICAvLyBcclxuICAvLyBOb3RlIHRoYXQgaWYgYW4gaWQgaXMgbm90IHBhc3NlZCBhcyB0aGUgZmlyc3QgYXJndW1lbnQsIHRoaXMgZG9UaW1lb3V0IHdpbGxcclxuICAvLyBOT1QgYmUgYWJsZSB0byBiZSBtYW51YWxseSBjYW5jZWxlZCBvciBmb3JjZWQuIChmb3IgZGVib3VuY2luZywgYmUgc3VyZSB0b1xyXG4gIC8vIHNwZWNpZnkgYW4gaWQpLlxyXG4gIC8vIFxyXG4gIC8vIElmIGlkIGlzIHNwZWNpZmllZCwgYnV0IGRlbGF5IGFuZCBjYWxsYmFjayBhcmUgbm90LCB0aGUgZG9UaW1lb3V0IHdpbGwgYmVcclxuICAvLyBjYW5jZWxlZCB3aXRob3V0IGV4ZWN1dGluZyB0aGUgY2FsbGJhY2suIElmIGZvcmNlX21vZGUgaXMgc3BlY2lmaWVkLCB0aGVcclxuICAvLyBjYWxsYmFjayB3aWxsIGJlIGV4ZWN1dGVkLCBzeW5jaHJvbm91c2x5LCBidXQgd2lsbCBvbmx5IGJlIGFsbG93ZWQgdG9cclxuICAvLyBjb250aW51ZSBhIHBvbGxpbmcgbG9vcCBpZiBmb3JjZV9tb2RlIGlzIHRydWUgKHByb3ZpZGVkIHRoZSBjYWxsYmFja1xyXG4gIC8vIHJldHVybnMgdHJ1ZSwgb2YgY291cnNlKS4gSWYgZm9yY2VfbW9kZSBpcyBmYWxzZSwgbm8gcG9sbGluZyBsb29wIHdpbGxcclxuICAvLyBjb250aW51ZSwgZXZlbiBpZiB0aGUgY2FsbGJhY2sgcmV0dXJucyB0cnVlLlxyXG4gIC8vIFxyXG4gIC8vIFVzYWdlOlxyXG4gIC8vIFxyXG4gIC8vID4galF1ZXJ5LmRvVGltZW91dCggWyBpZCwgXSBkZWxheSwgY2FsbGJhY2sgWywgYXJnIC4uLiBdICk7XHJcbiAgLy8gPiBqUXVlcnkuZG9UaW1lb3V0KCBpZCBbLCBmb3JjZV9tb2RlIF0gKTtcclxuICAvLyBcclxuICAvLyBBcmd1bWVudHM6XHJcbiAgLy8gXHJcbiAgLy8gIGlkIC0gKFN0cmluZykgQW4gb3B0aW9uYWwgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgZG9UaW1lb3V0LiBJZiBpZCBpc1xyXG4gIC8vICAgIG5vdCBzcGVjaWZpZWQsIHRoZSBkb1RpbWVvdXQgd2lsbCBOT1QgYmUgYWJsZSB0byBiZSBtYW51YWxseSBjYW5jZWxlZCBvclxyXG4gIC8vICAgIGZvcmNlZC5cclxuICAvLyAgZGVsYXkgLSAoTnVtYmVyKSBBIHplcm8tb3ItZ3JlYXRlciBkZWxheSBpbiBtaWxsaXNlY29uZHMgYWZ0ZXIgd2hpY2hcclxuICAvLyAgICBjYWxsYmFjayB3aWxsIGJlIGV4ZWN1dGVkLiBcclxuICAvLyAgY2FsbGJhY2sgLSAoRnVuY3Rpb24pIEEgZnVuY3Rpb24gdG8gYmUgZXhlY3V0ZWQgYWZ0ZXIgZGVsYXkgbWlsbGlzZWNvbmRzLlxyXG4gIC8vICBjYWxsYmFjayAtIChTdHJpbmcpIEEgalF1ZXJ5IG1ldGhvZCB0byBiZSBleGVjdXRlZCBhZnRlciBkZWxheVxyXG4gIC8vICAgIG1pbGxpc2Vjb25kcy4gVGhpcyBtZXRob2Qgd2lsbCBvbmx5IHBvbGwgaWYgaXQgZXhwbGljaXRseSByZXR1cm5zXHJcbiAgLy8gICAgdHJ1ZS5cclxuICAvLyAgZm9yY2VfbW9kZSAtIChCb29sZWFuKSBJZiB0cnVlLCBleGVjdXRlIHRoYXQgaWQncyBkb1RpbWVvdXQgY2FsbGJhY2tcclxuICAvLyAgICBpbW1lZGlhdGVseSBhbmQgc3luY2hyb25vdXNseSwgY29udGludWluZyBhbnkgY2FsbGJhY2sgcmV0dXJuLXRydWVcclxuICAvLyAgICBwb2xsaW5nIGxvb3AuIElmIGZhbHNlLCBleGVjdXRlIHRoZSBjYWxsYmFjayBpbW1lZGlhdGVseSBhbmRcclxuICAvLyAgICBzeW5jaHJvbm91c2x5IGJ1dCBkbyBOT1QgY29udGludWUgYSBjYWxsYmFjayByZXR1cm4tdHJ1ZSBwb2xsaW5nIGxvb3AuXHJcbiAgLy8gICAgSWYgb21pdHRlZCwgY2FuY2VsIHRoYXQgaWQncyBkb1RpbWVvdXQuXHJcbiAgLy8gXHJcbiAgLy8gUmV0dXJuczpcclxuICAvLyBcclxuICAvLyAgSWYgZm9yY2VfbW9kZSBpcyB0cnVlLCBmYWxzZSBvciB1bmRlZmluZWQgYW5kIHRoZXJlIGlzIGFcclxuICAvLyAgeWV0LXRvLWJlLWV4ZWN1dGVkIGNhbGxiYWNrIHRvIGNhbmNlbCwgdHJ1ZSBpcyByZXR1cm5lZCwgYnV0IGlmIG5vXHJcbiAgLy8gIGNhbGxiYWNrIHJlbWFpbnMgdG8gYmUgZXhlY3V0ZWQsIHVuZGVmaW5lZCBpcyByZXR1cm5lZC5cclxuICBcclxuICAkW2RvVGltZW91dF0gPSBmdW5jdGlvbigpIHtcclxuICAgIHJldHVybiBwX2RvVGltZW91dC5hcHBseSggd2luZG93LCBbIDAgXS5jb25jYXQoIGFwcy5jYWxsKCBhcmd1bWVudHMgKSApICk7XHJcbiAgfTtcclxuICBcclxuICAvLyBNZXRob2Q6IGpRdWVyeS5mbi5kb1RpbWVvdXRcclxuICAvLyBcclxuICAvLyBJbml0aWFsaXplLCBjYW5jZWwsIG9yIGZvcmNlIGV4ZWN1dGlvbiBvZiBhIGNhbGxiYWNrIGFmdGVyIGEgZGVsYXkuXHJcbiAgLy8gT3BlcmF0ZXMgbGlrZSA8alF1ZXJ5LmRvVGltZW91dD4sIGJ1dCB0aGUgcGFzc2VkIGNhbGxiYWNrIGV4ZWN1dGVzIGluIHRoZVxyXG4gIC8vIGNvbnRleHQgb2YgdGhlIGpRdWVyeSBjb2xsZWN0aW9uIG9mIGVsZW1lbnRzLCBhbmQgdGhlIGlkIGlzIHN0b3JlZCBhcyBkYXRhXHJcbiAgLy8gb24gdGhlIGZpcnN0IGVsZW1lbnQgaW4gdGhhdCBjb2xsZWN0aW9uLlxyXG4gIC8vIFxyXG4gIC8vIElmIGRlbGF5IGFuZCBjYWxsYmFjayBhcmUgc3BlY2lmaWVkLCBhIGRvVGltZW91dCBpcyBpbml0aWFsaXplZC4gVGhlXHJcbiAgLy8gY2FsbGJhY2sgd2lsbCBleGVjdXRlLCBhc3luY2hyb25vdXNseSwgYWZ0ZXIgdGhlIGRlbGF5LiBJZiBhbiBpZCBpc1xyXG4gIC8vIHNwZWNpZmllZCwgdGhpcyBkb1RpbWVvdXQgd2lsbCBvdmVycmlkZSBhbmQgY2FuY2VsIGFueSBleGlzdGluZyBkb1RpbWVvdXRcclxuICAvLyB3aXRoIHRoZSBzYW1lIGlkLiBBbnkgYWRkaXRpb25hbCBhcmd1bWVudHMgd2lsbCBiZSBwYXNzZWQgaW50byBjYWxsYmFja1xyXG4gIC8vIHdoZW4gaXQgaXMgZXhlY3V0ZWQuXHJcbiAgLy8gXHJcbiAgLy8gSWYgdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZSwgdGhlIGRvVGltZW91dCBsb29wIHdpbGwgZXhlY3V0ZSBhZ2FpbiwgYWZ0ZXJcclxuICAvLyB0aGUgZGVsYXksIGNyZWF0aW5nIGEgcG9sbGluZyBsb29wIHVudGlsIHRoZSBjYWxsYmFjayByZXR1cm5zIGEgbm9uLXRydWVcclxuICAvLyB2YWx1ZS5cclxuICAvLyBcclxuICAvLyBOb3RlIHRoYXQgaWYgYW4gaWQgaXMgbm90IHBhc3NlZCBhcyB0aGUgZmlyc3QgYXJndW1lbnQsIHRoaXMgZG9UaW1lb3V0IHdpbGxcclxuICAvLyBOT1QgYmUgYWJsZSB0byBiZSBtYW51YWxseSBjYW5jZWxlZCBvciBmb3JjZWQgKGZvciBkZWJvdW5jaW5nLCBiZSBzdXJlIHRvXHJcbiAgLy8gc3BlY2lmeSBhbiBpZCkuXHJcbiAgLy8gXHJcbiAgLy8gSWYgaWQgaXMgc3BlY2lmaWVkLCBidXQgZGVsYXkgYW5kIGNhbGxiYWNrIGFyZSBub3QsIHRoZSBkb1RpbWVvdXQgd2lsbCBiZVxyXG4gIC8vIGNhbmNlbGVkIHdpdGhvdXQgZXhlY3V0aW5nIHRoZSBjYWxsYmFjay4gSWYgZm9yY2VfbW9kZSBpcyBzcGVjaWZpZWQsIHRoZVxyXG4gIC8vIGNhbGxiYWNrIHdpbGwgYmUgZXhlY3V0ZWQsIHN5bmNocm9ub3VzbHksIGJ1dCB3aWxsIG9ubHkgYmUgYWxsb3dlZCB0b1xyXG4gIC8vIGNvbnRpbnVlIGEgcG9sbGluZyBsb29wIGlmIGZvcmNlX21vZGUgaXMgdHJ1ZSAocHJvdmlkZWQgdGhlIGNhbGxiYWNrXHJcbiAgLy8gcmV0dXJucyB0cnVlLCBvZiBjb3Vyc2UpLiBJZiBmb3JjZV9tb2RlIGlzIGZhbHNlLCBubyBwb2xsaW5nIGxvb3Agd2lsbFxyXG4gIC8vIGNvbnRpbnVlLCBldmVuIGlmIHRoZSBjYWxsYmFjayByZXR1cm5zIHRydWUuXHJcbiAgLy8gXHJcbiAgLy8gVXNhZ2U6XHJcbiAgLy8gXHJcbiAgLy8gPiBqUXVlcnkoJ3NlbGVjdG9yJykuZG9UaW1lb3V0KCBbIGlkLCBdIGRlbGF5LCBjYWxsYmFjayBbLCBhcmcgLi4uIF0gKTtcclxuICAvLyA+IGpRdWVyeSgnc2VsZWN0b3InKS5kb1RpbWVvdXQoIGlkIFssIGZvcmNlX21vZGUgXSApO1xyXG4gIC8vIFxyXG4gIC8vIEFyZ3VtZW50czpcclxuICAvLyBcclxuICAvLyAgaWQgLSAoU3RyaW5nKSBBbiBvcHRpb25hbCB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBkb1RpbWVvdXQsIHN0b3JlZCBhc1xyXG4gIC8vICAgIGpRdWVyeSBkYXRhIG9uIHRoZSBlbGVtZW50LiBJZiBpZCBpcyBub3Qgc3BlY2lmaWVkLCB0aGUgZG9UaW1lb3V0IHdpbGxcclxuICAvLyAgICBOT1QgYmUgYWJsZSB0byBiZSBtYW51YWxseSBjYW5jZWxlZCBvciBmb3JjZWQuXHJcbiAgLy8gIGRlbGF5IC0gKE51bWJlcikgQSB6ZXJvLW9yLWdyZWF0ZXIgZGVsYXkgaW4gbWlsbGlzZWNvbmRzIGFmdGVyIHdoaWNoXHJcbiAgLy8gICAgY2FsbGJhY2sgd2lsbCBiZSBleGVjdXRlZC4gXHJcbiAgLy8gIGNhbGxiYWNrIC0gKEZ1bmN0aW9uKSBBIGZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIGFmdGVyIGRlbGF5IG1pbGxpc2Vjb25kcy5cclxuICAvLyAgY2FsbGJhY2sgLSAoU3RyaW5nKSBBIGpRdWVyeS5mbiBtZXRob2QgdG8gYmUgZXhlY3V0ZWQgYWZ0ZXIgZGVsYXlcclxuICAvLyAgICBtaWxsaXNlY29uZHMuIFRoaXMgbWV0aG9kIHdpbGwgb25seSBwb2xsIGlmIGl0IGV4cGxpY2l0bHkgcmV0dXJuc1xyXG4gIC8vICAgIHRydWUgKG1vc3QgalF1ZXJ5LmZuIG1ldGhvZHMgcmV0dXJuIGEgalF1ZXJ5IG9iamVjdCwgYW5kIG5vdCBgdHJ1ZWAsXHJcbiAgLy8gICAgd2hpY2ggYWxsb3dzIHRoZW0gdG8gYmUgY2hhaW5lZCBhbmQgcHJldmVudHMgcG9sbGluZykuXHJcbiAgLy8gIGZvcmNlX21vZGUgLSAoQm9vbGVhbikgSWYgdHJ1ZSwgZXhlY3V0ZSB0aGF0IGlkJ3MgZG9UaW1lb3V0IGNhbGxiYWNrXHJcbiAgLy8gICAgaW1tZWRpYXRlbHkgYW5kIHN5bmNocm9ub3VzbHksIGNvbnRpbnVpbmcgYW55IGNhbGxiYWNrIHJldHVybi10cnVlXHJcbiAgLy8gICAgcG9sbGluZyBsb29wLiBJZiBmYWxzZSwgZXhlY3V0ZSB0aGUgY2FsbGJhY2sgaW1tZWRpYXRlbHkgYW5kXHJcbiAgLy8gICAgc3luY2hyb25vdXNseSBidXQgZG8gTk9UIGNvbnRpbnVlIGEgY2FsbGJhY2sgcmV0dXJuLXRydWUgcG9sbGluZyBsb29wLlxyXG4gIC8vICAgIElmIG9taXR0ZWQsIGNhbmNlbCB0aGF0IGlkJ3MgZG9UaW1lb3V0LlxyXG4gIC8vIFxyXG4gIC8vIFJldHVybnM6XHJcbiAgLy8gXHJcbiAgLy8gIFdoZW4gY3JlYXRpbmcgYSA8alF1ZXJ5LmZuLmRvVGltZW91dD4sIHRoZSBpbml0aWFsIGpRdWVyeSBjb2xsZWN0aW9uIG9mXHJcbiAgLy8gIGVsZW1lbnRzIGlzIHJldHVybmVkLiBPdGhlcndpc2UsIGlmIGZvcmNlX21vZGUgaXMgdHJ1ZSwgZmFsc2Ugb3IgdW5kZWZpbmVkXHJcbiAgLy8gIGFuZCB0aGVyZSBpcyBhIHlldC10by1iZS1leGVjdXRlZCBjYWxsYmFjayB0byBjYW5jZWwsIHRydWUgaXMgcmV0dXJuZWQsXHJcbiAgLy8gIGJ1dCBpZiBubyBjYWxsYmFjayByZW1haW5zIHRvIGJlIGV4ZWN1dGVkLCB1bmRlZmluZWQgaXMgcmV0dXJuZWQuXHJcbiAgXHJcbiAgJC5mbltkb1RpbWVvdXRdID0gZnVuY3Rpb24oKSB7XHJcbiAgICB2YXIgYXJncyA9IGFwcy5jYWxsKCBhcmd1bWVudHMgKSxcclxuICAgICAgcmVzdWx0ID0gcF9kb1RpbWVvdXQuYXBwbHkoIHRoaXMsIFsgZG9UaW1lb3V0ICsgYXJnc1swXSBdLmNvbmNhdCggYXJncyApICk7XHJcbiAgICBcclxuICAgIHJldHVybiB0eXBlb2YgYXJnc1swXSA9PT0gJ251bWJlcicgfHwgdHlwZW9mIGFyZ3NbMV0gPT09ICdudW1iZXInXHJcbiAgICAgID8gdGhpc1xyXG4gICAgICA6IHJlc3VsdDtcclxuICB9O1xyXG4gIFxyXG4gIGZ1bmN0aW9uIHBfZG9UaW1lb3V0KCBqcXVlcnlfZGF0YV9rZXkgKSB7XHJcbiAgICB2YXIgdGhhdCA9IHRoaXMsXHJcbiAgICAgIGVsZW0sXHJcbiAgICAgIGRhdGEgPSB7fSxcclxuICAgICAgXHJcbiAgICAgIC8vIEFsbG93cyB0aGUgcGx1Z2luIHRvIGNhbGwgYSBzdHJpbmcgY2FsbGJhY2sgbWV0aG9kLlxyXG4gICAgICBtZXRob2RfYmFzZSA9IGpxdWVyeV9kYXRhX2tleSA/ICQuZm4gOiAkLFxyXG4gICAgICBcclxuICAgICAgLy8gQW55IGFkZGl0aW9uYWwgYXJndW1lbnRzIHdpbGwgYmUgcGFzc2VkIHRvIHRoZSBjYWxsYmFjay5cclxuICAgICAgYXJncyA9IGFyZ3VtZW50cyxcclxuICAgICAgc2xpY2VfYXJncyA9IDQsXHJcbiAgICAgIFxyXG4gICAgICBpZCAgICAgICAgPSBhcmdzWzFdLFxyXG4gICAgICBkZWxheSAgICAgPSBhcmdzWzJdLFxyXG4gICAgICBjYWxsYmFjayAgPSBhcmdzWzNdO1xyXG4gICAgXHJcbiAgICBpZiAoIHR5cGVvZiBpZCAhPT0gJ3N0cmluZycgKSB7XHJcbiAgICAgIHNsaWNlX2FyZ3MtLTtcclxuICAgICAgXHJcbiAgICAgIGlkICAgICAgICA9IGpxdWVyeV9kYXRhX2tleSA9IDA7XHJcbiAgICAgIGRlbGF5ICAgICA9IGFyZ3NbMV07XHJcbiAgICAgIGNhbGxiYWNrICA9IGFyZ3NbMl07XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIElmIGlkIGlzIHBhc3NlZCwgc3RvcmUgYSBkYXRhIHJlZmVyZW5jZSBlaXRoZXIgYXMgLmRhdGEgb24gdGhlIGZpcnN0XHJcbiAgICAvLyBlbGVtZW50IGluIGEgalF1ZXJ5IGNvbGxlY3Rpb24sIG9yIGluIHRoZSBpbnRlcm5hbCBjYWNoZS5cclxuICAgIGlmICgganF1ZXJ5X2RhdGFfa2V5ICkgeyAvLyBOb3RlOiBrZXkgaXMgJ2RvVGltZW91dCcgKyBpZFxyXG4gICAgICBcclxuICAgICAgLy8gR2V0IGlkLW9iamVjdCBmcm9tIHRoZSBmaXJzdCBlbGVtZW50J3MgZGF0YSwgb3RoZXJ3aXNlIGluaXRpYWxpemUgaXQgdG8ge30uXHJcbiAgICAgIGVsZW0gPSB0aGF0LmVxKDApO1xyXG4gICAgICBlbGVtLmRhdGEoIGpxdWVyeV9kYXRhX2tleSwgZGF0YSA9IGVsZW0uZGF0YSgganF1ZXJ5X2RhdGFfa2V5ICkgfHwge30gKTtcclxuICAgICAgXHJcbiAgICB9IGVsc2UgaWYgKCBpZCApIHtcclxuICAgICAgLy8gR2V0IGlkLW9iamVjdCBmcm9tIHRoZSBjYWNoZSwgb3RoZXJ3aXNlIGluaXRpYWxpemUgaXQgdG8ge30uXHJcbiAgICAgIGRhdGEgPSBjYWNoZVsgaWQgXSB8fCAoIGNhY2hlWyBpZCBdID0ge30gKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gQ2xlYXIgYW55IGV4aXN0aW5nIHRpbWVvdXQgZm9yIHRoaXMgaWQuXHJcbiAgICBkYXRhLmlkICYmIGNsZWFyVGltZW91dCggZGF0YS5pZCApO1xyXG4gICAgZGVsZXRlIGRhdGEuaWQ7XHJcbiAgICBcclxuICAgIC8vIENsZWFuIHVwIHdoZW4gbmVjZXNzYXJ5LlxyXG4gICAgZnVuY3Rpb24gY2xlYW51cCgpIHtcclxuICAgICAgaWYgKCBqcXVlcnlfZGF0YV9rZXkgKSB7XHJcbiAgICAgICAgZWxlbS5yZW1vdmVEYXRhKCBqcXVlcnlfZGF0YV9rZXkgKTtcclxuICAgICAgfSBlbHNlIGlmICggaWQgKSB7XHJcbiAgICAgICAgZGVsZXRlIGNhY2hlWyBpZCBdO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICAvLyBZZXMsIHRoZXJlIGFjdHVhbGx5IGlzIGEgc2V0VGltZW91dCBjYWxsIGluIGhlcmUhXHJcbiAgICBmdW5jdGlvbiBhY3R1YWxseV9zZXRUaW1lb3V0KCkge1xyXG4gICAgICBkYXRhLmlkID0gc2V0VGltZW91dCggZnVuY3Rpb24oKXsgZGF0YS5mbigpOyB9LCBkZWxheSApO1xyXG4gICAgfTtcclxuICAgIFxyXG4gICAgaWYgKCBjYWxsYmFjayApIHtcclxuICAgICAgLy8gQSBjYWxsYmFjayAoYW5kIGRlbGF5KSB3ZXJlIHNwZWNpZmllZC4gU3RvcmUgdGhlIGNhbGxiYWNrIHJlZmVyZW5jZSBmb3JcclxuICAgICAgLy8gcG9zc2libGUgbGF0ZXIgdXNlLCBhbmQgdGhlbiBzZXRUaW1lb3V0LlxyXG4gICAgICBkYXRhLmZuID0gZnVuY3Rpb24oIG5vX3BvbGxpbmdfbG9vcCApIHtcclxuICAgICAgICBcclxuICAgICAgICAvLyBJZiB0aGUgY2FsbGJhY2sgdmFsdWUgaXMgYSBzdHJpbmcsIGl0IGlzIGFzc3VtZWQgdG8gYmUgdGhlIG5hbWUgb2YgYVxyXG4gICAgICAgIC8vIG1ldGhvZCBvbiAkIG9yICQuZm4gZGVwZW5kaW5nIG9uIHdoZXJlIGRvVGltZW91dCB3YXMgZXhlY3V0ZWQuXHJcbiAgICAgICAgaWYgKCB0eXBlb2YgY2FsbGJhY2sgPT09ICdzdHJpbmcnICkge1xyXG4gICAgICAgICAgY2FsbGJhY2sgPSBtZXRob2RfYmFzZVsgY2FsbGJhY2sgXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgY2FsbGJhY2suYXBwbHkoIHRoYXQsIGFwcy5jYWxsKCBhcmdzLCBzbGljZV9hcmdzICkgKSA9PT0gdHJ1ZSAmJiAhbm9fcG9sbGluZ19sb29wXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIC8vIFNpbmNlIHRoZSBjYWxsYmFjayByZXR1cm5lZCB0cnVlLCBhbmQgd2UncmUgbm90IHNwZWNpZmljYWxseVxyXG4gICAgICAgICAgLy8gY2FuY2VsaW5nIGEgcG9sbGluZyBsb29wLCBkbyBpdCBhZ2FpbiFcclxuICAgICAgICAgID8gYWN0dWFsbHlfc2V0VGltZW91dCgpXHJcbiAgICAgICAgICBcclxuICAgICAgICAgIC8vIE90aGVyd2lzZSwgY2xlYW4gdXAgYW5kIHF1aXQuXHJcbiAgICAgICAgICA6IGNsZWFudXAoKTtcclxuICAgICAgfTtcclxuICAgICAgXHJcbiAgICAgIC8vIFNldCB0aGF0IHRpbWVvdXQhXHJcbiAgICAgIGFjdHVhbGx5X3NldFRpbWVvdXQoKTtcclxuICAgICAgXHJcbiAgICB9IGVsc2UgaWYgKCBkYXRhLmZuICkge1xyXG4gICAgICAvLyBObyBjYWxsYmFjayBwYXNzZWQuIElmIGZvcmNlX21vZGUgKGRlbGF5KSBpcyB0cnVlLCBleGVjdXRlIHRoZSBkYXRhLmZuXHJcbiAgICAgIC8vIGNhbGxiYWNrIGltbWVkaWF0ZWx5LCBjb250aW51aW5nIGFueSBjYWxsYmFjayByZXR1cm4tdHJ1ZSBwb2xsaW5nIGxvb3AuXHJcbiAgICAgIC8vIElmIGZvcmNlX21vZGUgaXMgZmFsc2UsIGV4ZWN1dGUgdGhlIGRhdGEuZm4gY2FsbGJhY2sgaW1tZWRpYXRlbHkgYnV0IGRvXHJcbiAgICAgIC8vIE5PVCBjb250aW51ZSBhIGNhbGxiYWNrIHJldHVybi10cnVlIHBvbGxpbmcgbG9vcC4gSWYgZm9yY2VfbW9kZSBpc1xyXG4gICAgICAvLyB1bmRlZmluZWQsIHNpbXBseSBjbGVhbiB1cC4gU2luY2UgZGF0YS5mbiB3YXMgc3RpbGwgZGVmaW5lZCwgd2hhdGV2ZXJcclxuICAgICAgLy8gd2FzIHN1cHBvc2VkIHRvIGhhcHBlbiBoYWRuJ3QgeWV0LCBzbyByZXR1cm4gdHJ1ZS5cclxuICAgICAgZGVsYXkgPT09IHVuZGVmaW5lZCA/IGNsZWFudXAoKSA6IGRhdGEuZm4oIGRlbGF5ID09PSBmYWxzZSApO1xyXG4gICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBTaW5jZSBubyBjYWxsYmFjayB3YXMgcGFzc2VkLCBhbmQgZGF0YS5mbiBpc24ndCBkZWZpbmVkLCBpdCBsb29rcyBsaWtlXHJcbiAgICAgIC8vIHdoYXRldmVyIHdhcyBzdXBwb3NlZCB0byBoYXBwZW4gYWxyZWFkeSBkaWQuIENsZWFuIHVwIGFuZCBxdWl0IVxyXG4gICAgICBjbGVhbnVwKCk7XHJcbiAgICB9XHJcbiAgICBcclxuICB9O1xyXG4gIFxyXG59KShqUXVlcnkpO1xyXG5cclxuXHJcblxyXG5cclxuLy9DU1MzIEFuaW1hdGUtaXRcclxuJCgnLmFuaW1hdGVkUGFyZW50JykuYXBwZWFyKCk7XHJcbiQoJy5hbmltYXRlZENsaWNrJykuY2xpY2soZnVuY3Rpb24oKXtcclxuICB2YXIgdGFyZ2V0ID0gJCh0aGlzKS5hdHRyKCdkYXRhLXRhcmdldCcpO1xyXG5cclxuICBcclxuICBpZigkKHRoaXMpLmF0dHIoJ2RhdGEtc2VxdWVuY2UnKSAhPSB1bmRlZmluZWQpe1xyXG4gICAgdmFyIGZpcnN0SWQgPSAkKFwiLlwiK3RhcmdldCtcIjpmaXJzdFwiKS5hdHRyKCdkYXRhLWlkJyk7XHJcbiAgICB2YXIgbGFzdElkID0gJChcIi5cIit0YXJnZXQrXCI6bGFzdFwiKS5hdHRyKCdkYXRhLWlkJyk7XHJcbiAgICB2YXIgbnVtYmVyID0gZmlyc3RJZDtcclxuXHJcbiAgICAvL0FkZCBvciByZW1vdmUgdGhlIGNsYXNzXHJcbiAgICBpZigkKFwiLlwiK3RhcmdldCtcIltkYXRhLWlkPVwiKyBudW1iZXIgK1wiXVwiKS5oYXNDbGFzcygnZ28nKSl7XHJcbiAgICAgICQoXCIuXCIrdGFyZ2V0K1wiW2RhdGEtaWQ9XCIrIG51bWJlciArXCJdXCIpLmFkZENsYXNzKCdnb0F3YXknKTtcclxuICAgICAgJChcIi5cIit0YXJnZXQrXCJbZGF0YS1pZD1cIisgbnVtYmVyICtcIl1cIikucmVtb3ZlQ2xhc3MoJ2dvJyk7XHJcbiAgICB9ZWxzZXtcclxuICAgICAgJChcIi5cIit0YXJnZXQrXCJbZGF0YS1pZD1cIisgbnVtYmVyICtcIl1cIikuYWRkQ2xhc3MoJ2dvJyk7XHJcbiAgICAgICQoXCIuXCIrdGFyZ2V0K1wiW2RhdGEtaWQ9XCIrIG51bWJlciArXCJdXCIpLnJlbW92ZUNsYXNzKCdnb0F3YXknKTtcclxuICAgIH1cclxuICAgIG51bWJlciArKztcclxuICAgIGRlbGF5ID0gTnVtYmVyKCQodGhpcykuYXR0cignZGF0YS1zZXF1ZW5jZScpKTtcclxuICAgICQuZG9UaW1lb3V0KGRlbGF5LCBmdW5jdGlvbigpe1xyXG4gICAgICBjb25zb2xlLmxvZyhsYXN0SWQpO1xyXG4gICAgICBcclxuICAgICAgLy9BZGQgb3IgcmVtb3ZlIHRoZSBjbGFzc1xyXG4gICAgICBpZigkKFwiLlwiK3RhcmdldCtcIltkYXRhLWlkPVwiKyBudW1iZXIgK1wiXVwiKS5oYXNDbGFzcygnZ28nKSl7XHJcbiAgICAgICAgJChcIi5cIit0YXJnZXQrXCJbZGF0YS1pZD1cIisgbnVtYmVyICtcIl1cIikuYWRkQ2xhc3MoJ2dvQXdheScpO1xyXG4gICAgICAgICQoXCIuXCIrdGFyZ2V0K1wiW2RhdGEtaWQ9XCIrIG51bWJlciArXCJdXCIpLnJlbW92ZUNsYXNzKCdnbycpO1xyXG4gICAgICB9ZWxzZXtcclxuICAgICAgICAkKFwiLlwiK3RhcmdldCtcIltkYXRhLWlkPVwiKyBudW1iZXIgK1wiXVwiKS5hZGRDbGFzcygnZ28nKTtcclxuICAgICAgICAkKFwiLlwiK3RhcmdldCtcIltkYXRhLWlkPVwiKyBudW1iZXIgK1wiXVwiKS5yZW1vdmVDbGFzcygnZ29Bd2F5Jyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vaW5jcmVtZW50XHJcbiAgICAgICsrbnVtYmVyO1xyXG5cclxuICAgICAgLy9jb250aW51dGUgbG9vcGluZyB0aWxsIHJlYWNoZWQgbGFzdCBJRFxyXG4gICAgICBpZihudW1iZXIgPD0gbGFzdElkKXtyZXR1cm4gdHJ1ZTt9XHJcbiAgICB9KTtcclxuICB9ZWxzZXtcclxuICAgIGlmKCQoJy4nK3RhcmdldCkuaGFzQ2xhc3MoJ2dvJykpe1xyXG4gICAgICAkKCcuJyt0YXJnZXQpLmFkZENsYXNzKCdnb0F3YXknKTtcclxuICAgICAgJCgnLicrdGFyZ2V0KS5yZW1vdmVDbGFzcygnZ28nKTtcclxuICAgIH1lbHNle1xyXG4gICAgICAkKCcuJyt0YXJnZXQpLmFkZENsYXNzKCdnbycpO1xyXG4gICAgICAkKCcuJyt0YXJnZXQpLnJlbW92ZUNsYXNzKCdnb0F3YXknKTtcclxuICAgIH1cclxuICB9IFxyXG59KTtcclxuXHJcbiQoZG9jdW1lbnQuYm9keSkub24oJ2FwcGVhcicsICcuYW5pbWF0ZWRQYXJlbnQnLCBmdW5jdGlvbihlLCAkYWZmZWN0ZWQpe1xyXG4gIHZhciBlbGUgPSAkKHRoaXMpLmZpbmQoJy5hbmltYXRlZCcpO1xyXG4gIHZhciBwYXJlbnQgPSAkKHRoaXMpO1xyXG4gIFxyXG5cclxuICBpZihwYXJlbnQuYXR0cignZGF0YS1zZXF1ZW5jZScpICE9IHVuZGVmaW5lZCl7XHJcbiAgICBcclxuICAgIHZhciBmaXJzdElkID0gJCh0aGlzKS5maW5kKCcuYW5pbWF0ZWQ6Zmlyc3QnKS5hdHRyKCdkYXRhLWlkJyk7XHJcbiAgICB2YXIgbnVtYmVyID0gZmlyc3RJZDtcclxuICAgIHZhciBsYXN0SWQgPSAkKHRoaXMpLmZpbmQoJy5hbmltYXRlZDpsYXN0JykuYXR0cignZGF0YS1pZCcpO1xyXG5cclxuICAgICQocGFyZW50KS5maW5kKFwiLmFuaW1hdGVkW2RhdGEtaWQ9XCIrIG51bWJlciArXCJdXCIpLmFkZENsYXNzKCdnbycpO1xyXG4gICAgbnVtYmVyICsrO1xyXG4gICAgZGVsYXkgPSBOdW1iZXIocGFyZW50LmF0dHIoJ2RhdGEtc2VxdWVuY2UnKSk7XHJcblxyXG4gICAgJC5kb1RpbWVvdXQoZGVsYXksIGZ1bmN0aW9uKCl7XHJcbiAgICAgICQocGFyZW50KS5maW5kKFwiLmFuaW1hdGVkW2RhdGEtaWQ9XCIrIG51bWJlciArXCJdXCIpLmFkZENsYXNzKCdnbycpO1xyXG4gICAgICArK251bWJlcjtcclxuICAgICAgaWYobnVtYmVyIDw9IGxhc3RJZCl7cmV0dXJuIHRydWU7fVxyXG4gICAgfSk7XHJcbiAgfWVsc2V7XHJcbiAgICBlbGUuYWRkQ2xhc3MoJ2dvJyk7XHJcbiAgfVxyXG4gIFxyXG59KTtcclxuXHJcbiAkKGRvY3VtZW50LmJvZHkpLm9uKCdkaXNhcHBlYXInLCAnLmFuaW1hdGVkUGFyZW50JywgZnVuY3Rpb24oZSwgJGFmZmVjdGVkKSB7XHJcbiAgaWYoISQodGhpcykuaGFzQ2xhc3MoJ2FuaW1hdGVPbmNlJykpe1xyXG4gICAgJCh0aGlzKS5maW5kKCcuYW5pbWF0ZWQnKS5yZW1vdmVDbGFzcygnZ28nKTtcclxuICAgfVxyXG4gfSk7XHJcblxyXG4gJCh3aW5kb3cpLm9uKCdsb2FkJyxmdW5jdGlvbigpe1xyXG4gICQuZm9yY2VfYXBwZWFyKCk7XHJcbiB9KTtcclxufSk7IiwiLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHNlY3Rpb24gMlxyXG5cclxuJ3VzZSBzdHJpY3QnO1xyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xyXG4gICAgdmFyIHMyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5zMi1vcmlnaW4tc2tpbGxzXCIpO1xyXG4gICAgdmFyIHNuMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zY3JvbGwtdG8tYWJvdXQnKTtcclxuICAgIHZhciBzMl90cmlnZ2VyQm91bmNpbmcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIG5hdiA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBhZ2VfbWFpbi1uYXYgbmF2XCIpLm9mZnNldEhlaWdodCkrMTAwO1xyXG4gICAgICAgIGlmICh3aW5kb3cuc2Nyb2xsWSA+PSAoLypzMlswXSovc24yLm9mZnNldFRvcCAtIG5hdikgJiYgd2luZG93LmlubmVyV2lkdGggPj0gNzY4KSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgczIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHMyW2ldLmNsYXNzTGlzdC5hZGQoXCJzMi1ib3VuY2luZ0FuaW1hdGlvblwiKTtcclxuICAgICAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIHMyX3RyaWdnZXJCb3VuY2luZywgZmFsc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgczJfdHJpZ2dlckJvdW5jaW5nLCBmYWxzZSk7XHJcbn0pOyIsIiFmdW5jdGlvbih0LGUpe1wiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZSgpKTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKCk6ZnVuY3Rpb24gbigpe2RvY3VtZW50JiZkb2N1bWVudC5ib2R5P3QuemVuc2Nyb2xsPWUoKTpzZXRUaW1lb3V0KG4sOSl9KCl9KHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgdD1mdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJnZXRDb21wdXRlZFN0eWxlXCJpbiB3aW5kb3cmJlwic21vb3RoXCI9PT13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0KVtcInNjcm9sbC1iZWhhdmlvclwiXX07aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIHdpbmRvd3x8IShcImRvY3VtZW50XCJpbiB3aW5kb3cpKXJldHVybnt9O3ZhciBlPWZ1bmN0aW9uKGUsbixvKXtuPW58fDk5OSxvfHwwPT09b3x8KG89OSk7dmFyIGkscj1mdW5jdGlvbih0KXtpPXR9LHU9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoaSkscigwKX0sYz1mdW5jdGlvbih0KXtyZXR1cm4gTWF0aC5tYXgoMCxlLmdldFRvcE9mKHQpLW8pfSxhPWZ1bmN0aW9uKG8saSxjKXtpZih1KCksMD09PWl8fGkmJmk8MHx8dChlLmJvZHkpKWUudG9ZKG8pLGMmJmMoKTtlbHNle3ZhciBhPWUuZ2V0WSgpLGY9TWF0aC5tYXgoMCxvKS1hLHM9KG5ldyBEYXRlKS5nZXRUaW1lKCk7aT1pfHxNYXRoLm1pbihNYXRoLmFicyhmKSxuKSxmdW5jdGlvbiB0KCl7cihzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIG49TWF0aC5taW4oMSwoKG5ldyBEYXRlKS5nZXRUaW1lKCktcykvaSksbz1NYXRoLm1heCgwLE1hdGguZmxvb3IoYStmKihuPC41PzIqbipuOm4qKDQtMipuKS0xKSkpO2UudG9ZKG8pLG48MSYmZS5nZXRIZWlnaHQoKStvPGUuYm9keS5zY3JvbGxIZWlnaHQ/dCgpOihzZXRUaW1lb3V0KHUsOTkpLGMmJmMoKSl9LDkpKX0oKX19LGY9ZnVuY3Rpb24odCxlLG4pe2EoYyh0KSxlLG4pfSxzPWZ1bmN0aW9uKHQsbixpKXt2YXIgcj10LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodCx1PWUuZ2V0VG9wT2YodCkrcixzPWUuZ2V0SGVpZ2h0KCksbD1lLmdldFkoKSxkPWwrcztjKHQpPGx8fHIrbz5zP2YodCxuLGkpOnUrbz5kP2EodS1zK28sbixpKTppJiZpKCl9LGw9ZnVuY3Rpb24odCxuLG8saSl7YShNYXRoLm1heCgwLGUuZ2V0VG9wT2YodCktZS5nZXRIZWlnaHQoKS8yKyhvfHx0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodC8yKSksbixpKX07cmV0dXJue3NldHVwOmZ1bmN0aW9uKHQsZSl7cmV0dXJuKDA9PT10fHx0KSYmKG49dCksKDA9PT1lfHxlKSYmKG89ZSkse2RlZmF1bHREdXJhdGlvbjpuLGVkZ2VPZmZzZXQ6b319LHRvOmYsdG9ZOmEsaW50b1ZpZXc6cyxjZW50ZXI6bCxzdG9wOnUsbW92aW5nOmZ1bmN0aW9uKCl7cmV0dXJuISFpfSxnZXRZOmUuZ2V0WSxnZXRUb3BPZjplLmdldFRvcE9mfX0sbj1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsbz1mdW5jdGlvbigpe3JldHVybiB3aW5kb3cuc2Nyb2xsWXx8bi5zY3JvbGxUb3B9LGk9ZSh7Ym9keTpkb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50fHxkb2N1bWVudC5ib2R5LHRvWTpmdW5jdGlvbih0KXt3aW5kb3cuc2Nyb2xsVG8oMCx0KX0sZ2V0WTpvLGdldEhlaWdodDpmdW5jdGlvbigpe3JldHVybiB3aW5kb3cuaW5uZXJIZWlnaHR8fG4uY2xpZW50SGVpZ2h0fSxnZXRUb3BPZjpmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3ArbygpLW4ub2Zmc2V0VG9wfX0pO2lmKGkuY3JlYXRlU2Nyb2xsZXI9ZnVuY3Rpb24odCxvLGkpe3JldHVybiBlKHtib2R5OnQsdG9ZOmZ1bmN0aW9uKGUpe3Quc2Nyb2xsVG9wPWV9LGdldFk6ZnVuY3Rpb24oKXtyZXR1cm4gdC5zY3JvbGxUb3B9LGdldEhlaWdodDpmdW5jdGlvbigpe3JldHVybiBNYXRoLm1pbih0LmNsaWVudEhlaWdodCx3aW5kb3cuaW5uZXJIZWlnaHR8fG4uY2xpZW50SGVpZ2h0KX0sZ2V0VG9wT2Y6ZnVuY3Rpb24odCl7cmV0dXJuIHQub2Zmc2V0VG9wfX0sbyxpKX0sXCJhZGRFdmVudExpc3RlbmVyXCJpbiB3aW5kb3cmJiF3aW5kb3cubm9aZW5zbW9vdGgmJiF0KGRvY3VtZW50LmJvZHkpKXt2YXIgcj1cImhpc3RvcnlcImluIHdpbmRvdyYmXCJwdXNoU3RhdGVcImluIGhpc3RvcnksdT1yJiZcInNjcm9sbFJlc3RvcmF0aW9uXCJpbiBoaXN0b3J5O3UmJihoaXN0b3J5LnNjcm9sbFJlc3RvcmF0aW9uPVwiYXV0b1wiKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixmdW5jdGlvbigpe3UmJihzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aGlzdG9yeS5zY3JvbGxSZXN0b3JhdGlvbj1cIm1hbnVhbFwifSw5KSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInBvcHN0YXRlXCIsZnVuY3Rpb24odCl7dC5zdGF0ZSYmXCJ6ZW5zY3JvbGxZXCJpbiB0LnN0YXRlJiZpLnRvWSh0LnN0YXRlLnplbnNjcm9sbFkpfSwhMSkpLHdpbmRvdy5sb2NhdGlvbi5oYXNoJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIHQ9aS5zZXR1cCgpLmVkZ2VPZmZzZXQ7aWYodCl7dmFyIGU9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQod2luZG93LmxvY2F0aW9uLmhyZWYuc3BsaXQoXCIjXCIpWzFdKTtpZihlKXt2YXIgbj1NYXRoLm1heCgwLGkuZ2V0VG9wT2YoZSktdCksbz1pLmdldFkoKS1uOzA8PW8mJm88OSYmd2luZG93LnNjcm9sbFRvKDAsbil9fX0sOSl9LCExKTt2YXIgYz1uZXcgUmVnRXhwKFwiKF58XFxcXHMpbm9aZW5zbW9vdGgoXFxcXHN8JClcIik7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnRhcmdldDtlJiZcIkFcIiE9PWUudGFnTmFtZTspZT1lLnBhcmVudE5vZGU7aWYoISghZXx8MSE9PXQud2hpY2h8fHQuc2hpZnRLZXl8fHQubWV0YUtleXx8dC5jdHJsS2V5fHx0LmFsdEtleSkpe2lmKHUpe3ZhciBuPWhpc3Rvcnkuc3RhdGUmJlwib2JqZWN0XCI9PXR5cGVvZiBoaXN0b3J5LnN0YXRlP2hpc3Rvcnkuc3RhdGU6e307bi56ZW5zY3JvbGxZPWkuZ2V0WSgpO3RyeXtoaXN0b3J5LnJlcGxhY2VTdGF0ZShuLFwiXCIpfWNhdGNoKHQpe319dmFyIG89ZS5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpfHxcIlwiO2lmKDA9PT1vLmluZGV4T2YoXCIjXCIpJiYhYy50ZXN0KGUuY2xhc3NOYW1lKSl7dmFyIGE9MCxmPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG8uc3Vic3RyaW5nKDEpKTtpZihcIiNcIiE9PW8pe2lmKCFmKXJldHVybjthPWkuZ2V0VG9wT2YoZil9dC5wcmV2ZW50RGVmYXVsdCgpO3ZhciBzPWZ1bmN0aW9uKCl7d2luZG93LmxvY2F0aW9uPW99LGw9aS5zZXR1cCgpLmVkZ2VPZmZzZXQ7bCYmKGE9TWF0aC5tYXgoMCxhLWwpLHImJihzPWZ1bmN0aW9uKCl7aGlzdG9yeS5wdXNoU3RhdGUoe30sXCJcIixvKX0pKSxpLnRvWShhLG51bGwscyl9fX0sITEpfXJldHVybiBpfSk7IiwiLypBdXRob3I6IE1hY2llaiBCYXJ0ecWEc2tpKi9cclxuLypZb3UgY2FuIHVzZSwgeW91IGNhbiBlZGl0Ki9cclxuXHJcbi8vSUV4cGxvcmVyIHN1cHBvcnRlZDtcclxuLyoqIFNldHMgZml0LXBvc2l0aW9uIGFuZCBzdGFydHMgdG8gbGlzdGVuIGZvciB3aW5kb3cgcmVzaXplOlxyXG5maXQuY292ZXIocG9zaXRpb25lZCwgcG9zaXRpb25lcikgKiovXHJcbi8qKiBTZXRzIGZpdC1wb3NpdGlvbjtcclxuZml0LmFUb0IocG9zaXRpb25lZCwgcG9zaXRpb25lcikgKiovXHJcbi8qKiBTdGFydHMgdG8gbGlzdGVuIGZvciB3aW5kb3cgcmVzaXplO1xyXG5maXQubGlzdGVuKHBvc2l0aW9uZWQsIHBvc2l0aW9uZXIpICoqL1xyXG5leHBvcnQgdmFyIGZpdCA9IHtcclxuICAgIHNldFNpemVYWTogZnVuY3Rpb24gKGltYWdlLCBzcGFjZSkge1xyXG4gICAgICAgIGxldCBzaXplWCA9IGltYWdlLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIGxldCBzaXplWSA9IGltYWdlLm9mZnNldEhlaWdodDtcclxuICAgICAgICBsZXQgcmF0aW8gPSBzaXplWCAvIHNpemVZO1xyXG4gICAgICAgIHNwYWNlLnN0eWxlLmJveFNpemluZyA9IFwiYm9yZGVyLWJveFwiO1xyXG4gICAgICAgIHNwYWNlLnN0eWxlLnBhZGRpbmcgPSAwO1xyXG4gICAgICAgIHNwYWNlLnN0eWxlLm1hcmdpbiA9IDA7XHJcbiAgICAgICAgbGV0IHNwYWNlWCA9IHNwYWNlLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIGxldCBzcGFjZVkgPSBzcGFjZS5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgbGV0IHNwYWNlUmF0aW8gPSBzcGFjZVggLyBzcGFjZVk7XHJcbiAgICAgICAgaWYgKHNwYWNlUmF0aW8gPiByYXRpbykge1xyXG4gICAgICAgICAgICBpbWFnZS5zdHlsZS5oZWlnaHQgPSBzcGFjZVkgKyAncHgnO1xyXG4gICAgICAgICAgICBpbWFnZS5zdHlsZS53aWR0aCA9IFwiYXV0b1wiO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoc3BhY2VSYXRpbyA8IHJhdGlvKSB7XHJcbiAgICAgICAgICAgIGltYWdlLnN0eWxlLndpZHRoID0gc3BhY2VYICsgJ3B4JztcclxuICAgICAgICAgICAgaW1hZ2Uuc3R5bGUuaGVpZ2h0ID0gXCJhdXRvXCI7XHJcbiAgICAgICAgfSBlbHNlIGlmIChzcGFjZVJhdGlvID09PSByYXRpbykge1xyXG4gICAgICAgICAgICBpbWFnZS5zdHlsZS5oZWlnaHQgPSBzcGFjZVkgKyAncHgnO1xyXG4gICAgICAgICAgICBpbWFnZS5zdHlsZS53aWR0aCA9IFwiYXV0b1wiO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBhVG9COiBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICAgIHRoaXMuc2V0U2l6ZVhZKGEsIGIpO1xyXG4gICAgfSxcclxuICAgIGxpc3RlbjogZnVuY3Rpb24gKGEsIGIpIHtcclxuICAgICAgICB0aGlzLnNldFNpemVYWShhLCBiKTtcclxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBmaXQuc2V0U2l6ZVhZKGEsIGIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIGNvdmVyOiBmdW5jdGlvbiAoYSwgYikge1xyXG4gICAgICAgIHRoaXMuc2V0U2l6ZVhZKGEsIGIpO1xyXG4gICAgICAgIHRoaXMubGlzdGVuKGEsIGIpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHplbnNjcm9sbCBmcm9tICcuL3plbnNjcm9sbC1taW4uanMnO1xyXG5pbXBvcnQge2ZpdH0gZnJvbSAnLi9maXRzaXppbmcuanMnO1xyXG5pbXBvcnQgJy4vemVuc2Nyb2xsLW1pbi5qcyc7XHJcbid1c2Ugc3RyaWN0JztcclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGluaXRpYWxpemVHYWxsZXJ5U2VjdGlvbik7XHJcblxyXG5mdW5jdGlvbiBpbml0aWFsaXplR2FsbGVyeVNlY3Rpb24oKSB7XHJcbiAgICBpbml0R2FsbGVyeU5hdkJ0bnMoKTtcclxuICAgIGluaXRHYWxsZXJ5TW9iaWxlTmF2QmFyKCk7XHJcbiAgICBpbml0QmlnR2FsbGVyeSgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0R2FsbGVyeU5hdkJ0bnMoKSB7XHJcbiAgICBsZXQgYnRucyA9IG9iamVjdFRvQXJyYXkoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNuNF9uYXZfZG90LWJ0bicpKTtcclxuICAgIGxldCB3cmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNuNF9nYWxsZXJ5LXdyYXBwZXInKTtcclxuICAgIGJ0bnMuZm9yRWFjaChmdW5jdGlvbiAoYnRuLCBpZHgpIHtcclxuICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGJ0bnMuZm9yRWFjaChidG4gPT4gYnRuLmNsYXNzTGlzdC5yZW1vdmUoJ3NuNF9jbGlja2VkJykpO1xyXG4gICAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgnc240X2NsaWNrZWQnKTtcclxuICAgICAgICAgICAgd3JhcHBlci5zdHlsZS5sZWZ0ID0gKGlkeCAqIDEwMCkgKiAtMSArICclJztcclxuICAgICAgICAgICAgaW5pdEdlbGxlcnlNb2JpbGVOYXZCdG5zKHdyYXBwZXIsIGJ0bnMsIGlkeCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRHZWxsZXJ5TW9iaWxlTmF2QnRucyh3cmFwcGVyLCBidG5zLCBpZHgpIHtcclxuICAgIGlmICh3cmFwcGVyLnBhcmVudE5vZGUub2Zmc2V0V2lkdGggPD0gNjIwKSB7XHJcbiAgICAgICAgemVuc2Nyb2xsLnRvKHdyYXBwZXIucGFyZW50Tm9kZSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRHYWxsZXJ5TW9iaWxlTmF2QmFyKCkge1xyXG4gICAgbGV0IGJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zbjRfbmF2Jyk7XHJcbiAgICBsZXQgbGFzdFBvc2l0aW9uID0gd2luZG93LnBhZ2VZT2Zmc2V0O1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoYmFyLnBhcmVudE5vZGUub2Zmc2V0V2lkdGggPD0gNjIwKSB7XHJcbiAgICAgICAgICAgIGxldCBuZXdQb3NpdGlvbiA9IHdpbmRvdy5wYWdlWU9mZnNldDtcclxuICAgICAgICAgICAgaWYgKGxhc3RQb3NpdGlvbiA8IG5ld1Bvc2l0aW9uID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICBzdGlja3lHYWxsZXJ5TW9iaWxlTmF2U2Nyb2xsaW5nRG93bihuZXdQb3NpdGlvbik7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAobGFzdFBvc2l0aW9uID4gbmV3UG9zaXRpb24gPT09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgIHN0aWNreUdhbGxlcnlNb2JpbGVOYXZTY3JvbGxpbmdVcChuZXdQb3NpdGlvbik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgbGFzdFBvc2l0aW9uID0gbmV3UG9zaXRpb247XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufVxyXG5cclxuZnVuY3Rpb24gc3RpY2t5R2FsbGVyeU1vYmlsZU5hdlNjcm9sbGluZ0Rvd24obmV3UG9zaXRpb24pIHtcclxuICAgIGxldCBnYWxsZXJ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNuNF9nYWxsZXJ5LXdyYXBwZXInKTtcclxuICAgIGxldCByb29mID0gZ2FsbGVyeS5vZmZzZXRUb3A7XHJcbiAgICBsZXQgZmxvb3IgPSByb29mICsgZ2FsbGVyeS5vZmZzZXRIZWlnaHQ7XHJcbiAgICBsZXQgcGVyaW1ldGVyID0gKHdpbmRvdy5pbm5lckhlaWdodCAvIDMpICogMztcclxuICAgIGlmIChuZXdQb3NpdGlvbiA+IHJvb2YgJiYgKG5ld1Bvc2l0aW9uICsgcGVyaW1ldGVyKSA8IGZsb29yKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNuNF9uYXYnKS5jbGFzc0xpc3QuYWRkKCdzbjRfbmF2X2ZpeGVkJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zbjRfbmF2JykuY2xhc3NMaXN0LnJlbW92ZSgnc240X25hdl9maXhlZCcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzdGlja3lHYWxsZXJ5TW9iaWxlTmF2U2Nyb2xsaW5nVXAobmV3UG9zaXRpb24pIHtcclxuICAgIGxldCBnYWxsZXJ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNuNF9nYWxsZXJ5LXdyYXBwZXInKTtcclxuICAgIGxldCByb29mID0gZ2FsbGVyeS5vZmZzZXRUb3A7XHJcbiAgICBsZXQgZmxvb3IgPSByb29mICsgZ2FsbGVyeS5vZmZzZXRIZWlnaHQ7XHJcbiAgICBsZXQgcGVyaW1ldGVyID0gd2luZG93LmlubmVySGVpZ2h0IC8gMztcclxuICAgIGlmIChuZXdQb3NpdGlvbiA8IHJvb2YgLyotIHBlcmltZXRlciovKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNuNF9uYXYnKS5jbGFzc0xpc3QucmVtb3ZlKCdzbjRfbmF2X2ZpeGVkJyk7XHJcbiAgICB9IGVsc2UgaWYgKG5ld1Bvc2l0aW9uIDwgZmxvb3IgLSAocGVyaW1ldGVyICogMy8qMiovKSAmJiBuZXdQb3NpdGlvbiA+IHJvb2YgLyotIHBlcmltZXRlciAtIDEqLykge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zbjRfbmF2JykuY2xhc3NMaXN0LmFkZCgnc240X25hdl9maXhlZCcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0QmlnR2FsbGVyeSgpIHtcclxuICAgIGxldCB0aWx0cyA9IG9iamVjdFRvQXJyYXkoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNuNF9jb250YWluZXJfZ2FsbGVyeV9pbWctcG9zaXRpb25lcicpKTtcclxuICAgIGxldCBJRGxldHRlcnMgPSBnZXRCYWNrZ3JvdW5kSW1hZ2VOYW1lcyh0aWx0cyk7XHJcbiAgICB0aWx0cy5mb3JFYWNoKGZ1bmN0aW9uICh0aWx0LCBpZHgpIHtcclxuICAgICAgICB0aWx0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBjcmVhdGVCaWdHYWxsZXJ5KElEbGV0dGVycywgaWR4KTtcclxuICAgICAgICB9KVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldEJhY2tncm91bmRJbWFnZU5hbWVzKGJncykge1xyXG4gICAgbGV0IGFsbFBob3Rvc0lETGV0dGVycyA9IFtdO1xyXG4gICAgYmdzLmZvckVhY2goZnVuY3Rpb24gKGJnKSB7XHJcbiAgICAgICAgbGV0IGJnVVJMID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoYmcucXVlcnlTZWxlY3RvcignLnNuNF9nYWxsZXJ5LWltYWdlJykpLmdldFByb3BlcnR5VmFsdWUoJ2JhY2tncm91bmQtaW1hZ2UnKTtcclxuICAgICAgICBsZXQgc2VhcmNoRm9yID0gKGJnVVJMLmluZGV4T2YoJy5qcGcnKSkgLSAxO1xyXG4gICAgICAgIGFsbFBob3Rvc0lETGV0dGVycy5wdXNoKGJnVVJMLmNoYXJBdChzZWFyY2hGb3IpKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGFsbFBob3Rvc0lETGV0dGVycztcclxufVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQmlnR2FsbGVyeShpZHMsIGlkeCkge1xyXG4gICAgLy9jb25zb2xlLmxvZyh0aGlzUGhvdG8sIHBob3RvSWR4KTtcclxuICAgIGxldCBpZCA9IGlkc1tpZHhdO1xyXG4gICAgbGV0IGJpZ0JHID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBiaWdCRy5jbGFzc0xpc3QuYWRkKCdzbjRfYmlnQkcnKTtcclxuICAgIGxldCBwb3NpdGlvbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBwb3NpdGlvbmVyLmNsYXNzTGlzdC5hZGQoJ3NuNF9iaWdCR19wb3NpdGlvbmVyJyk7XHJcbiAgICBsZXQgSU1HID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcbiAgICBJTUcuc2V0QXR0cmlidXRlKCdzcmMnLCAnLi9idWlsZC9nYWxsZXJ5L3Bob3RvLScgKyBpZCArICcuanBnJyk7XHJcbiAgICBiaWdCRy5hcHBlbmRDaGlsZChwb3NpdGlvbmVyKTtcclxuICAgIHBvc2l0aW9uZXIuYXBwZW5kQ2hpbGQoSU1HKTtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYmlnQkcpO1xyXG4gICAgZml0LmNvdmVyKElNRywgcG9zaXRpb25lcik7XHJcbiAgICBjcmVhdGVCaWdHYWxsZXJ5TmF2KGJpZ0JHLCBpZHgsIElNRyk7XHJcbn1cclxubGV0IGJpZ0dhbGxlcnlTd2FwQ291bnRlcjtcclxuZnVuY3Rpb24gY3JlYXRlQmlnR2FsbGVyeU5hdihiZywgaWR4LCBJTUcpIHtcclxuICAgIGJpZ0dhbGxlcnlTd2FwQ291bnRlcj1pZHg7XHJcbiAgICBsZXQgbmF2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbmF2Jyk7XHJcbiAgICBuYXYuY2xhc3NMaXN0LmFkZCgnc240X2JpZ0JHX25hdicpO1xyXG4gICAgYmcuYXBwZW5kQ2hpbGQobmF2KTtcclxuICAgIGxldCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBhLmNsYXNzTGlzdC5hZGQoJ3NuNF9iaWdCR19uYXZfcG9zaXRpb25lcicpO1xyXG4gICAgbmF2LmFwcGVuZENoaWxkKGEpO1xyXG4gICAgbGV0IGJ0bnMgPSBbdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZF07XHJcbiAgICBsZXQgaWNvbnMgPSBbJzxpIGNsYXNzPVwiZmFzIGZhLWFycm93LWxlZnRcIj48L2k+JywgJzxpIGNsYXNzPVwiZmFzIGZhLXRpbWVzXCI+PC9pPicsICc8aSBjbGFzcz1cImZhcyBmYS1hcnJvdy1yaWdodFwiPjwvaSA+J107XHJcbiAgICBidG5zLmZvckVhY2goZnVuY3Rpb24gKGJ0biwgaSkge1xyXG4gICAgICAgIGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCdzbjRfYmlnQkdfbmF2X3Bvc2l0aW9uZWQtYnRuJyk7XHJcbiAgICAgICAgYS5hcHBlbmRDaGlsZChidG4pO1xyXG4gICAgICAgIGJ0bi5pbm5lckhUTUwgPSBpY29uc1tpXTtcclxuICAgICAgICBsZXQgaW1hZ2VzID0gb2JqZWN0VG9BcnJheShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc240X2NvbnRhaW5lcl9nYWxsZXJ5X2ltZy1wb3NpdGlvbmVyJykpO1xyXG4gICAgICAgIGxldCBpZExldHRlcnMgPSBnZXRCYWNrZ3JvdW5kSW1hZ2VOYW1lcyhpbWFnZXMpO1xyXG4gICAgICAgIGlmIChpID09PSAwKSB7XHJcbiAgICAgICAgICAgIGxldFRoaXNXb3JrKGJ0biwgSU1HLCBpZExldHRlcnMsICgtMSkpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoaSA9PT0gMSkge1xyXG4gICAgICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc240X2JpZ0JHJykuY2xhc3NMaXN0LmFkZCgnc240X2ZhZGUtb3V0Jyk7XHJcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc240X2JpZ0JHJykpO1xyXG4gICAgICAgICAgICAgICAgfSwzMDApO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2UgaWYgKGkgPT09IDIpIHtcclxuICAgICAgICAgICAgbGV0VGhpc1dvcmsoYnRuLCBJTUcsIGlkTGV0dGVycywgMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuZnVuY3Rpb24gbGV0VGhpc1dvcmsoYnRuLCBpbWcsIGlkcywgZGlyKSB7XHJcbiAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgYmlnR2FsbGVyeVN3YXBDb3VudGVyPWJpZ0dhbGxlcnlTd2FwQ291bnRlcitkaXI7XHJcbiAgICAgICAgaWYgKGJpZ0dhbGxlcnlTd2FwQ291bnRlciA9PT0gaWRzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBiaWdHYWxsZXJ5U3dhcENvdW50ZXIgPSAwO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoYmlnR2FsbGVyeVN3YXBDb3VudGVyPDApe1xyXG4gICAgICAgICAgICBiaWdHYWxsZXJ5U3dhcENvdW50ZXIgPSBpZHMubGVuZ3RoIC0gMVxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaW1nLmNsYXNzTGlzdC5yZW1vdmUoJ3NuNF9mYWRlLW91dC1pbicpO1xyXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge2ltZy5jbGFzc0xpc3QuYWRkKCdzbjRfZmFkZS1vdXQtaW4nKX0sMCk7XHJcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGltZy5zZXRBdHRyaWJ1dGUoJ3NyYycsICcuL2J1aWxkL2dhbGxlcnkvcGhvdG8tJyArIGlkc1tiaWdHYWxsZXJ5U3dhcENvdW50ZXJdICsgJy5qcGcnKVxyXG4gICAgICAgIH0sIDApO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9iamVjdFRvQXJyYXkob2JqZWN0VG9JdGVyYXRlKSB7XHJcbiAgICBsZXQgeCA9IG9iamVjdFRvSXRlcmF0ZS5sZW5ndGg7XHJcbiAgICBsZXQgbmV3QXJyYXkgPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgeDsgaSsrKSB7XHJcbiAgICAgICAgbmV3QXJyYXkucHVzaChvYmplY3RUb0l0ZXJhdGVbaV0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ld0FycmF5O1xyXG59IiwiaW1wb3J0IHplbnNjcm9sbCBmcm9tICcuL3plbnNjcm9sbC1taW4uanMnO1xyXG4ndXNlIHN0cmljdCc7XHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBpbml0aWFsaXplTmF2QmFyKTtcclxuLy9sZXQgc2VjcyA9IFsnLnNjcm9sbC10by1zdGFydCcsICcuc2Nyb2xsLXRvLWFib3V0JywgJy5zY3JvbGwtdG8tb2ZmZXInLCAnLnNjcm9sbC10by1nYWxsZXJ5JywgJy5zY3JvbGwtdG8tY29udGFjdCddO1xyXG5cclxuZnVuY3Rpb24gaW5pdGlhbGl6ZU5hdkJhcigpIHtcclxuICAgIGluaXRpYWxpemVOYXZDb250YWluZXJIZWlnaHQoKTtcclxuICAgIGluaXRpYWxpemVOYXZpZ2F0aW9uKCk7XHJcbiAgICBpbml0aWFsaXplTmF2QnV0dG9ucygpO1xyXG4gICAgaW5pdGlhbGl6ZUJ0blRpdGxlc09uU2Nyb2xsaW5nKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRpYWxpemVOYXZDb250YWluZXJIZWlnaHQoKSB7XHJcbiAgICBsZXQgbmF2aGVpZ2h0ID0gKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlX21haW4tbmF2IG5hdicpKS5vZmZzZXRIZWlnaHQ7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZV9tYWluLW5hdicpLnN0eWxlLmhlaWdodCA9IG5hdmhlaWdodCArIDUgKyAncHgnO1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsZXQgbmF2aWhlaWdodCA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZV9tYWluLW5hdiBuYXYnKSkub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlX21haW4tbmF2Jykuc3R5bGUuaGVpZ2h0ID0gbmF2aWhlaWdodCArIDUgKyAncHgnO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRpYWxpemVOYXZpZ2F0aW9uKCkge1xyXG4gICAgbGV0IG5hdmJhciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wYWdlX21haW4tbmF2IG5hdicpO1xyXG4gICAgbGV0IG5hdmJhckNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Rpdi5wYWdlX21haW4tbmF2JylcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHdpbmRvdy5wYWdlWU9mZnNldCA+IG5hdmJhckNvbnRhaW5lci5vZmZzZXRIZWlnaHQpIHtcclxuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICBuYXZiYXIuY2xhc3NMaXN0LmFkZCgncGFnZV9tYWluLW5hdl9uYXYtc3RpY2t5JylcclxuICAgICAgICAgICAgfSwgMCk7XHJcbiAgICAgICAgICAgIG5hdmJhci5jbGFzc0xpc3QuYWRkKCdwYWdlX21haW4tbmF2X3ByZXRlbmQtdG8tYmUtc3RpY2t5Jyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbmF2YmFyLmNsYXNzTGlzdC5yZW1vdmUoJ3BhZ2VfbWFpbi1uYXZfbmF2LXN0aWNreScpO1xyXG4gICAgICAgICAgICBuYXZiYXIuY2xhc3NMaXN0LnJlbW92ZSgncGFnZV9tYWluLW5hdl9wcmV0ZW5kLXRvLWJlLXN0aWNreScpO1xyXG4gICAgICAgIH1cclxuICAgIH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGluaXRpYWxpemVOYXZCdXR0b25zKCkge1xyXG4gICAgbGV0IGJ0bnMgPSBvYmplY3RUb0FycmF5KGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wYWdlX21haW4tbmF2IG5hdiB1bCBsaScpKTtcclxuICAgIGxldCBzZWN0aW9ucyA9IFsnLnNjcm9sbC10by1zdGFydCcsICcuc2Nyb2xsLXRvLWFib3V0JywgJy5zY3JvbGwtdG8tb2ZmZXInLCAnLnNjcm9sbC10by1nYWxsZXJ5JywgJy5zY3JvbGwtdG8tY29udGFjdCddO1xyXG4gICAgYnRucy5mb3JFYWNoKGZ1bmN0aW9uIChidG4sIGlkeCkge1xyXG4gICAgICAgIGJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgbGV0IG5hdmhlaWdodCA9IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZV9tYWluLW5hdiBuYXYnKSkub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgICAgICBsZXQgeXRhcmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlY3Rpb25zW2lkeF0pLm9mZnNldFRvcDtcclxuICAgICAgICAgICAgemVuc2Nyb2xsLnRvWSh5dGFyZyAtIG5hdmhlaWdodCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBpbml0aWFsaXplQnRuVGl0bGVzT25TY3JvbGxpbmcoKSB7XHJcbiAgICBsZXQgbGFzdFBvc2l0aW9uID0gd2luZG93LnBhZ2VZT2Zmc2V0O1xyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBsZXQgbmV3UG9zaXRpb24gPSB3aW5kb3cucGFnZVlPZmZzZXQ7XHJcbiAgICAgICAgaWYgKGxhc3RQb3NpdGlvbiA8IG5ld1Bvc2l0aW9uID09PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGZpcnN0V2F5VG9MaWdodFRoZUJ1dHRvbigpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAobGFzdFBvc2l0aW9uID4gbmV3UG9zaXRpb24gPT09IHRydWUpIHtcclxuICAgICAgICAgICAgc2Vjb25kV2F5VG9MaWdodFRoZUJ1dHRvbihuZXdQb3NpdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxhc3RQb3NpdGlvbiA9IG5ld1Bvc2l0aW9uO1xyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpcnN0V2F5VG9MaWdodFRoZUJ1dHRvbigpIHtcclxuICAgIGxldCBidG5zID0gb2JqZWN0VG9BcnJheShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGFnZV9tYWluLW5hdiBuYXYgdWwgbGknKSk7XHJcbiAgICBsZXQgbmF2SGVpZ2h0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2VfbWFpbi1uYXYgbmF2Jykub2Zmc2V0SGVpZ2h0O1xyXG4gICAgbGV0IHNlY0NTU2NsYXNzZXMgPSBbJy5zY3JvbGwtdG8tc3RhcnQnLCAnLnNjcm9sbC10by1hYm91dCcsICcuc2Nyb2xsLXRvLW9mZmVyJywgJy5zY3JvbGwtdG8tZ2FsbGVyeScsICcuc2Nyb2xsLXRvLWNvbnRhY3QnXTtcclxuICAgIHNlY0NTU2NsYXNzZXMuZm9yRWFjaChmdW5jdGlvbiAoc2VjQ2xhc3MsIGlkeCkge1xyXG4gICAgICAgIGxldCBzZWMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlY0NsYXNzKTtcclxuICAgICAgICBpZiAod2luZG93LnBhZ2VZT2Zmc2V0ID49IChzZWMub2Zmc2V0VG9wIC0gbmF2SGVpZ2h0IC0gMSkgJiZcclxuICAgICAgICAgICAgd2luZG93LnBhZ2VZT2Zmc2V0IDwgKHNlYy5vZmZzZXRUb3AgKyBzZWMub2Zmc2V0SGVpZ2h0IC0gbmF2SGVpZ2h0KSkge1xyXG4gICAgICAgICAgICBidG5zW2lkeF0uY2xhc3NMaXN0LmFkZCgnc2V0b25zY3JvbGwnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBidG5zW2lkeF0uY2xhc3NMaXN0LnJlbW92ZSgnc2V0b25zY3JvbGwnKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2Vjb25kV2F5VG9MaWdodFRoZUJ1dHRvbigpIHtcclxuICAgIGxldCBidG5zID0gb2JqZWN0VG9BcnJheShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGFnZV9tYWluLW5hdiBuYXYgdWwgbGknKSk7XHJcbiAgICBsZXQgbmF2SGVpZ2h0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2VfbWFpbi1uYXYgbmF2Jykub2Zmc2V0SGVpZ2h0O1xyXG4gICAgbGV0IHNlY0NTU2NsYXNzZXMgPSBbJy5zY3JvbGwtdG8tc3RhcnQnLCAnLnNjcm9sbC10by1hYm91dCcsICcuc2Nyb2xsLXRvLW9mZmVyJywgJy5zY3JvbGwtdG8tZ2FsbGVyeScsICcuc2Nyb2xsLXRvLWNvbnRhY3QnXTtcclxuICAgIHNlY0NTU2NsYXNzZXMuZm9yRWFjaChmdW5jdGlvbiAoc2VjQ2xhc3MsIGlkeCkge1xyXG4gICAgICAgIGxldCBzZWMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlY0NsYXNzKTtcclxuICAgICAgICBpZiAod2luZG93LnBhZ2VZT2Zmc2V0IDwgKHNlYy5vZmZzZXRUb3AgKyBzZWMub2Zmc2V0SGVpZ2h0IC0gbmF2SGVpZ2h0IC0gMzAwKSAmJlxyXG4gICAgICAgICAgICB3aW5kb3cucGFnZVlPZmZzZXQgPiAoc2VjLm9mZnNldFRvcCAtIG5hdkhlaWdodCAtIDI5OSkpIHtcclxuICAgICAgICAgICAgYnRuc1tpZHhdLmNsYXNzTGlzdC5hZGQoJ3NldG9uc2Nyb2xsJyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgYnRuc1tpZHhdLmNsYXNzTGlzdC5yZW1vdmUoJ3NldG9uc2Nyb2xsJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9iamVjdFRvQXJyYXkob2JqZWN0VG9JdGVyYXRlKSB7XHJcbiAgICBsZXQgeCA9IG9iamVjdFRvSXRlcmF0ZS5sZW5ndGg7XHJcbiAgICBsZXQgbmV3QXJyYXkgPSBbXTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgeDsgaSsrKSB7XHJcbiAgICAgICAgbmV3QXJyYXkucHVzaChvYmplY3RUb0l0ZXJhdGVbaV0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ld0FycmF5O1xyXG59IiwiaW1wb3J0IHplbnNjcm9sbCBmcm9tICcuL3plbnNjcm9sbC1taW4uanMnO1xyXG4ndXNlIHN0cmljdCc7XHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBpbml0aWFsaXplQWRkaW5ncyk7XHJcbmZ1bmN0aW9uIGluaXRpYWxpemVBZGRpbmdzKCl7XHJcbiAgICBidXR0b25JbkZpcnN0U2VjdGlvbigpO1xyXG59XHJcbmZ1bmN0aW9uIGJ1dHRvbkluRmlyc3RTZWN0aW9uKCl7XHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuczFfYmFyX2J1dHRvbi10by1nbycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXtcclxuICAgICAgICBsZXQgZ29Ub05leHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2Nyb2xsLXRvLWFib3V0Jykub2Zmc2V0VG9wIC0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbmF2Jykub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIHplbnNjcm9sbC50b1koZ29Ub05leHQpO1xyXG4gICAgfSk7XHJcbn0iXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiJCIsIiRwcmlvcl9hcHBlYXJlZCIsInNlbGVjdG9ycyIsImNoZWNrX2JpbmRlZCIsImNoZWNrX2xvY2siLCJkZWZhdWx0cyIsIiR3aW5kb3ciLCJ3aW5kb3ciLCJwcm9jZXNzIiwiaW5kZXgiLCJsZW5ndGgiLCIkYXBwZWFyZWQiLCJmaWx0ZXIiLCJ0aGlzIiwiaXMiLCJ0cmlnZ2VyIiwiJGRpc2FwcGVhcmVkIiwibm90IiwiZXhwciIsImVsZW1lbnQiLCIkZWxlbWVudCIsIndpbmRvd19sZWZ0Iiwic2Nyb2xsTGVmdCIsIndpbmRvd190b3AiLCJzY3JvbGxUb3AiLCJvZmZzZXQiLCJsZWZ0IiwidG9wIiwiaGVpZ2h0IiwiZGF0YSIsIndpZHRoIiwiZm4iLCJleHRlbmQiLCJvcHRpb25zIiwib3B0cyIsInNlbGVjdG9yIiwib25fY2hlY2siLCJpbnRlcnZhbCIsInNjcm9sbCIsInJlc2l6ZSIsImZvcmNlX3Byb2Nlc3MiLCJwdXNoIiwialF1ZXJ5IiwiY2FjaGUiLCJBcnJheSIsInByb3RvdHlwZSIsInNsaWNlIiwicF9kb1RpbWVvdXQiLCJqcXVlcnlfZGF0YV9rZXkiLCJlbGVtIiwidGhhdCIsImFyZ3VtZW50cyIsInNsaWNlX2FyZ3MiLCJpZCIsImFyZ3MiLCJkZWxheSIsImNhbGxiYWNrIiwiY2xlYW51cCIsInJlbW92ZURhdGEiLCJhY3R1YWxseV9zZXRUaW1lb3V0Iiwic2V0VGltZW91dCIsImVxIiwiY2xlYXJUaW1lb3V0Iiwibm9fcG9sbGluZ19sb29wIiwibWV0aG9kX2Jhc2UiLCJhcHBseSIsImFwcyIsImNhbGwiLCJ1bmRlZmluZWQiLCJkb1RpbWVvdXQiLCJjb25jYXQiLCJyZXN1bHQiLCJhcHBlYXIiLCJjbGljayIsInRhcmdldCIsImF0dHIiLCJmaXJzdElkIiwibGFzdElkIiwibnVtYmVyIiwiaGFzQ2xhc3MiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwiTnVtYmVyIiwibG9nIiwiYm9keSIsIm9uIiwiZSIsIiRhZmZlY3RlZCIsImVsZSIsImZpbmQiLCJwYXJlbnQiLCJmb3JjZV9hcHBlYXIiLCJzMiIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzbjIiLCJxdWVyeVNlbGVjdG9yIiwiczJfdHJpZ2dlckJvdW5jaW5nIiwibmF2Iiwib2Zmc2V0SGVpZ2h0Iiwic2Nyb2xsWSIsIm9mZnNldFRvcCIsImlubmVyV2lkdGgiLCJpIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInQiLCJnZXRDb21wdXRlZFN0eWxlIiwibiIsIm8iLCJyIiwidSIsImMiLCJNYXRoIiwibWF4IiwiZ2V0VG9wT2YiLCJhIiwidG9ZIiwiZ2V0WSIsImYiLCJzIiwiRGF0ZSIsImdldFRpbWUiLCJtaW4iLCJhYnMiLCJmbG9vciIsImdldEhlaWdodCIsInNjcm9sbEhlaWdodCIsInNldHVwIiwiZGVmYXVsdER1cmF0aW9uIiwiZWRnZU9mZnNldCIsInRvIiwiaW50b1ZpZXciLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJsIiwiZCIsImNlbnRlciIsInN0b3AiLCJtb3ZpbmciLCJkb2N1bWVudEVsZW1lbnQiLCJzY3JvbGxpbmdFbGVtZW50Iiwic2Nyb2xsVG8iLCJpbm5lckhlaWdodCIsImNsaWVudEhlaWdodCIsImNyZWF0ZVNjcm9sbGVyIiwibm9aZW5zbW9vdGgiLCJoaXN0b3J5Iiwic2Nyb2xsUmVzdG9yYXRpb24iLCJzdGF0ZSIsInplbnNjcm9sbFkiLCJsb2NhdGlvbiIsImhhc2giLCJnZXRFbGVtZW50QnlJZCIsImhyZWYiLCJzcGxpdCIsIlJlZ0V4cCIsInRhZ05hbWUiLCJwYXJlbnROb2RlIiwid2hpY2giLCJzaGlmdEtleSIsIm1ldGFLZXkiLCJjdHJsS2V5IiwiYWx0S2V5IiwicmVwbGFjZVN0YXRlIiwiZ2V0QXR0cmlidXRlIiwiaW5kZXhPZiIsInRlc3QiLCJjbGFzc05hbWUiLCJzdWJzdHJpbmciLCJwcmV2ZW50RGVmYXVsdCIsInB1c2hTdGF0ZSIsImV4cG9ydHMiLCJtb2R1bGUiLCJ6ZW5zY3JvbGwiLCJmaXQiLCJpbWFnZSIsInNwYWNlIiwicmF0aW8iLCJvZmZzZXRXaWR0aCIsInN0eWxlIiwiYm94U2l6aW5nIiwicGFkZGluZyIsIm1hcmdpbiIsInNwYWNlWCIsInNwYWNlWSIsInNwYWNlUmF0aW8iLCJiIiwic2V0U2l6ZVhZIiwibGlzdGVuIiwiZ2V0QmFja2dyb3VuZEltYWdlTmFtZXMiLCJiZ3MiLCJhbGxQaG90b3NJRExldHRlcnMiLCJmb3JFYWNoIiwiYmciLCJiZ1VSTCIsImdldFByb3BlcnR5VmFsdWUiLCJzZWFyY2hGb3IiLCJjaGFyQXQiLCJidG5zIiwib2JqZWN0VG9BcnJheSIsIndyYXBwZXIiLCJidG4iLCJpZHgiLCJyZW1vdmUiLCJiYXIiLCJsYXN0UG9zaXRpb24iLCJwYWdlWU9mZnNldCIsIm5ld1Bvc2l0aW9uIiwiZ2FsbGVyeSIsInJvb2YiLCJwZXJpbWV0ZXIiLCJ0aWx0cyIsIklEbGV0dGVycyIsInRpbHQiLCJpZHMiLCJiaWdCRyIsImNyZWF0ZUVsZW1lbnQiLCJwb3NpdGlvbmVyIiwiSU1HIiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJjb3ZlciIsImljb25zIiwiaW5uZXJIVE1MIiwiaW1hZ2VzIiwiaWRMZXR0ZXJzIiwicmVtb3ZlQ2hpbGQiLCJiaWdHYWxsZXJ5U3dhcENvdW50ZXIiLCJsZXRUaGlzV29yayIsImltZyIsImRpciIsIm9iamVjdFRvSXRlcmF0ZSIsIngiLCJuZXdBcnJheSIsIm5hdmhlaWdodCIsIm5hdmloZWlnaHQiLCJuYXZiYXIiLCJuYXZiYXJDb250YWluZXIiLCJzZWN0aW9ucyIsInl0YXJnIiwibmF2SGVpZ2h0Iiwic2VjQ2xhc3MiLCJzZWMiLCJnb1RvTmV4dCJdLCJtYXBwaW5ncyI6InlCQVlBQSxTQUFTQyxpQkFBaUIsbUJBQW9CLHFCQUNwQ0MsT0FXSkMsRUFWQUMsRUFBWSxHQUVaQyxHQUFlLEVBQ2ZDLEdBQWEsRUFDYkMsRUFBVyxVQUNILG1CQUNLLEdBRWJDLEVBQVVOLEVBQUVPLGlCQUlQQyxPQUNNLE1BQ1IsSUFBSUMsRUFBUSxFQUFHQSxFQUFRUCxFQUFVUSxPQUFRRCxJQUFTLEtBQ2pERSxFQUFZWCxFQUFFRSxFQUFVTyxJQUFRRyxPQUFPLGtCQUNsQ1osRUFBRWEsTUFBTUMsR0FBRyxvQkFHVkMsUUFBUSxTQUFVLENBQUNKLElBRXpCVixFQUFpQixLQUVmZSxFQUFlZixFQUFnQmdCLElBQUlOLEtBQzFCSSxRQUFRLFlBQWEsQ0FBQ0MsTUFFbkJMLEtBS3BCTyxLQUFLLEtBQVAsU0FBMEIsU0FBU0MsT0FDN0JDLEVBQVdwQixFQUFFbUIsT0FDWkMsRUFBU04sR0FBRyxtQkFDUixNQUdMTyxFQUFjZixFQUFRZ0IsYUFDdEJDLEVBQWFqQixFQUFRa0IsWUFDckJDLEVBQVNMLEVBQVNLLFNBQ2xCQyxFQUFPRCxFQUFPQyxLQUNkQyxFQUFNRixFQUFPRSxXQUViQSxFQUFNUCxFQUFTUSxVQUFZTCxHQUMzQkksR0FBT1AsRUFBU1MsS0FBSyxzQkFBd0IsSUFBTU4sRUFBYWpCLEVBQVFzQixVQUN4RUYsRUFBT04sRUFBU1UsU0FBV1QsR0FDM0JLLEdBQVFOLEVBQVNTLEtBQUssdUJBQXlCLElBQU1SLEVBQWNmLEVBQVF3QixXQU8vRUMsR0FBR0MsT0FBTyxRQUVGLFNBQVNDLE9BQ1hDLEVBQU9sQyxFQUFFZ0MsT0FBTyxHQUFJM0IsRUFBVTRCLEdBQVcsSUFDekNFLEVBQVd0QixLQUFLc0IsVUFBWXRCLFNBQzNCVixFQUFjLEtBQ2JpQyxFQUFXLFdBQ1RoQyxPQUdTLGFBRUZJLEVBQVMwQixFQUFLRyxjQUd6QjlCLFFBQVErQixP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
